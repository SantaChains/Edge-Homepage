{"ast":null,"code":"/**\r\n * 应用启动管理器\r\n * 处理应用初始化、设置加载和延迟显示\r\n */import configManager from'./simpleConfigManager';import backgroundManager from'./backgroundManager';class AppInitializer{constructor(){this.isInitialized=false;this.initPromise=null;this.settings={};}/**\r\n   * 初始化应用\r\n   * @param {Object} options 初始化选项\r\n   * @returns {Promise<Object>} 初始化结果\r\n   */async initialize(){let options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};if(this.initPromise){return this.initPromise;}this.initPromise=this._performInitialization(options);return this.initPromise;}/**\r\n   * 执行初始化过程\r\n   * @private\r\n   */async _performInitialization(options){try{const{delay=150,// 延迟时间，避免闪烁\nshowLoadingScreen=true}=options;// 显示加载屏幕\nif(showLoadingScreen){this._showLoadingScreen();}// 延迟初始化，避免闪烁\nawait new Promise(resolve=>setTimeout(resolve,delay));// 初始化配置管理器\nawait configManager.initialize();// 加载设置\nthis.settings=configManager.get('settings',{});// 应用基础设置\nthis._applyBaseSettings(this.settings);// 确定启动模块\nconst startupModule=this._determineStartupModule(this.settings);// 应用完整设置\nthis._applyFullSettings(this.settings);// 隐藏加载屏幕\nif(showLoadingScreen){this._hideLoadingScreen();}this.isInitialized=true;return{success:true,settings:this.settings,startupModule,message:'应用初始化成功'};}catch(error){console.error('应用初始化失败:',error);// 隐藏加载屏幕\nthis._hideLoadingScreen();return{success:false,error,settings:{},startupModule:'quote',message:'应用初始化失败，使用默认设置'};}}/**\r\n   * 确定启动模块\r\n   * @private\r\n   */_determineStartupModule(settings){const moduleComponents=['calendar','bookmark','todo','note','quote','news'];let startupModule='quote';// 默认为一语\nif(settings.startupModuleType==='last'){// 继承上次使用的模块\nconst lastModule=configManager.get('data.lastActiveModule','quote');startupModule=lastModule;}else if(settings.startupModuleType==='specific'){// 使用指定的模块\nstartupModule=settings.startupModule||'quote';}else{// 如果没有设置，检查是否有上次使用的模块\nconst lastModule=configManager.get('data.lastActiveModule',null);if(lastModule){startupModule=lastModule;}}// 验证模块是否存在\nif(!moduleComponents.includes(startupModule)){startupModule='quote';}return startupModule;}/**\r\n   * 应用基础设置\r\n   * @private\r\n   */_applyBaseSettings(settings){const root=document.documentElement;// 设置页面标题\ndocument.title='時';// 应用基础CSS变量\nroot.style.setProperty('--primary-color',settings.linkColor||'#4a90e2');root.style.setProperty('--transition-speed','0.3s');// 预设主题变量，避免闪烁\nif(settings.theme==='dark'){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}}/**\r\n   * 应用完整设置\r\n   * @private\r\n   */_applyFullSettings(settings){try{const root=document.documentElement;const body=document.body;// 应用主题\nconst theme=settings.theme||'light';if(theme==='dark'){root.style.setProperty('--background-color','#121212');root.style.setProperty('--card-background','#1e1e1e');root.style.setProperty('--border-color','#333333');root.style.setProperty('--text-color',settings.textColor||'#e0e0e0');root.style.setProperty('--text-secondary-color','#a0a0a0');root.style.setProperty('--hover-background','#333333');root.style.setProperty('--primary-color-light','rgba(74, 144, 226, 0.2)');body.classList.add('dark-mode');}else{root.style.setProperty('--background-color','#ffffff');root.style.setProperty('--card-background','#f8f8f8');root.style.setProperty('--border-color','#e0e0e0');root.style.setProperty('--text-color',settings.textColor||'#333333');root.style.setProperty('--text-secondary-color','#666666');root.style.setProperty('--hover-background','#f0f0f0');root.style.setProperty('--primary-color-light','rgba(74, 144, 226, 0.1)');body.classList.remove('dark-mode');}// 应用字体设置\nif(settings.fontFamily){root.style.setProperty('--font-family',settings.fontFamily);}// 使用背景管理器应用背景设置\nbackgroundManager.applySettings(settings);}catch(error){console.error('应用完整设置时出错:',error);}}/**\r\n   * 显示加载屏幕\r\n   * @private\r\n   */_showLoadingScreen(){// 检查是否已存在加载屏幕\nif(document.getElementById('app-loading-screen')){return;}const loadingScreen=document.createElement('div');loadingScreen.id='app-loading-screen';loadingScreen.innerHTML=`\n      <div style=\"\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100vw;\n        height: 100vh;\n        background: var(--background-color, #ffffff);\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        z-index: 9999;\n        transition: opacity 0.3s ease;\n      \">\n        <div style=\"\n          width: 60px;\n          height: 60px;\n          border: 3px solid var(--border-color, #e0e0e0);\n          border-top: 3px solid var(--primary-color, #4a90e2);\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin-bottom: 20px;\n        \"></div>\n        <div style=\"\n          font-size: 18px;\n          font-weight: 500;\n          color: var(--text-color, #333333);\n          margin-bottom: 8px;\n        \">正在加载...</div>\n        <div style=\"\n          font-size: 14px;\n          color: var(--text-secondary-color, #666666);\n        \">请稍候，正在初始化应用程序</div>\n      </div>\n      <style>\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      </style>\n    `;document.body.appendChild(loadingScreen);}/**\r\n   * 隐藏加载屏幕\r\n   * @private\r\n   */_hideLoadingScreen(){const loadingScreen=document.getElementById('app-loading-screen');if(loadingScreen){loadingScreen.style.opacity='0';setTimeout(()=>{if(loadingScreen.parentNode){loadingScreen.parentNode.removeChild(loadingScreen);}},300);}}/**\r\n   * 获取当前设置\r\n   */getSettings(){return this.settings;}/**\r\n   * 更新设置\r\n   */updateSettings(newSettings){this.settings={...this.settings,...newSettings};this._applyFullSettings(this.settings);}/**\r\n   * 重置初始化状态\r\n   */reset(){this.isInitialized=false;this.initPromise=null;this.settings={};}}// 创建单例实例\nconst appInitializer=new AppInitializer();export default appInitializer;","map":{"version":3,"names":["configManager","backgroundManager","AppInitializer","constructor","isInitialized","initPromise","settings","initialize","options","arguments","length","undefined","_performInitialization","delay","showLoadingScreen","_showLoadingScreen","Promise","resolve","setTimeout","get","_applyBaseSettings","startupModule","_determineStartupModule","_applyFullSettings","_hideLoadingScreen","success","message","error","console","moduleComponents","startupModuleType","lastModule","includes","root","document","documentElement","title","style","setProperty","linkColor","theme","body","classList","add","remove","textColor","fontFamily","applySettings","getElementById","loadingScreen","createElement","id","innerHTML","appendChild","opacity","parentNode","removeChild","getSettings","updateSettings","newSettings","reset","appInitializer"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/utils/appInitializer.js"],"sourcesContent":["/**\r\n * 应用启动管理器\r\n * 处理应用初始化、设置加载和延迟显示\r\n */\r\n\r\nimport configManager from './simpleConfigManager';\r\nimport backgroundManager from './backgroundManager';\r\n\r\nclass AppInitializer {\r\n  constructor() {\r\n    this.isInitialized = false;\r\n    this.initPromise = null;\r\n    this.settings = {};\r\n  }\r\n\r\n  /**\r\n   * 初始化应用\r\n   * @param {Object} options 初始化选项\r\n   * @returns {Promise<Object>} 初始化结果\r\n   */\r\n  async initialize(options = {}) {\r\n    if (this.initPromise) {\r\n      return this.initPromise;\r\n    }\r\n\r\n    this.initPromise = this._performInitialization(options);\r\n    return this.initPromise;\r\n  }\r\n\r\n  /**\r\n   * 执行初始化过程\r\n   * @private\r\n   */\r\n  async _performInitialization(options) {\r\n    try {\r\n      const { \r\n        delay = 150, // 延迟时间，避免闪烁\r\n        showLoadingScreen = true \r\n      } = options;\r\n\r\n      // 显示加载屏幕\r\n      if (showLoadingScreen) {\r\n        this._showLoadingScreen();\r\n      }\r\n\r\n      // 延迟初始化，避免闪烁\r\n      await new Promise(resolve => setTimeout(resolve, delay));\r\n\r\n      // 初始化配置管理器\r\n      await configManager.initialize();\r\n\r\n      // 加载设置\r\n      this.settings = configManager.get('settings', {});\r\n\r\n      // 应用基础设置\r\n      this._applyBaseSettings(this.settings);\r\n\r\n      // 确定启动模块\r\n      const startupModule = this._determineStartupModule(this.settings);\r\n\r\n      // 应用完整设置\r\n      this._applyFullSettings(this.settings);\r\n\r\n      // 隐藏加载屏幕\r\n      if (showLoadingScreen) {\r\n        this._hideLoadingScreen();\r\n      }\r\n\r\n      this.isInitialized = true;\r\n\r\n      return {\r\n        success: true,\r\n        settings: this.settings,\r\n        startupModule,\r\n        message: '应用初始化成功'\r\n      };\r\n\r\n    } catch (error) {\r\n      console.error('应用初始化失败:', error);\r\n      \r\n      // 隐藏加载屏幕\r\n      this._hideLoadingScreen();\r\n\r\n      return {\r\n        success: false,\r\n        error,\r\n        settings: {},\r\n        startupModule: 'quote',\r\n        message: '应用初始化失败，使用默认设置'\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 确定启动模块\r\n   * @private\r\n   */\r\n  _determineStartupModule(settings) {\r\n    const moduleComponents = ['calendar', 'bookmark', 'todo', 'note', 'quote', 'news'];\r\n    let startupModule = 'quote'; // 默认为一语\r\n\r\n    if (settings.startupModuleType === 'last') {\r\n      // 继承上次使用的模块\r\n      const lastModule = configManager.get('data.lastActiveModule', 'quote');\r\n      startupModule = lastModule;\r\n    } else if (settings.startupModuleType === 'specific') {\r\n      // 使用指定的模块\r\n      startupModule = settings.startupModule || 'quote';\r\n    } else {\r\n      // 如果没有设置，检查是否有上次使用的模块\r\n      const lastModule = configManager.get('data.lastActiveModule', null);\r\n      if (lastModule) {\r\n        startupModule = lastModule;\r\n      }\r\n    }\r\n\r\n    // 验证模块是否存在\r\n    if (!moduleComponents.includes(startupModule)) {\r\n      startupModule = 'quote';\r\n    }\r\n\r\n    return startupModule;\r\n  }\r\n\r\n  /**\r\n   * 应用基础设置\r\n   * @private\r\n   */\r\n  _applyBaseSettings(settings) {\r\n    const root = document.documentElement;\r\n    \r\n    // 设置页面标题\r\n    document.title = '時';\r\n    \r\n    // 应用基础CSS变量\r\n    root.style.setProperty('--primary-color', settings.linkColor || '#4a90e2');\r\n    root.style.setProperty('--transition-speed', '0.3s');\r\n    \r\n    // 预设主题变量，避免闪烁\r\n    if (settings.theme === 'dark') {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 应用完整设置\r\n   * @private\r\n   */\r\n  _applyFullSettings(settings) {\r\n    try {\r\n      const root = document.documentElement;\r\n      const body = document.body;\r\n      \r\n      // 应用主题\r\n      const theme = settings.theme || 'light';\r\n      if (theme === 'dark') {\r\n        root.style.setProperty('--background-color', '#121212');\r\n        root.style.setProperty('--card-background', '#1e1e1e');\r\n        root.style.setProperty('--border-color', '#333333');\r\n        root.style.setProperty('--text-color', settings.textColor || '#e0e0e0');\r\n        root.style.setProperty('--text-secondary-color', '#a0a0a0');\r\n        root.style.setProperty('--hover-background', '#333333');\r\n        root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.2)');\r\n        body.classList.add('dark-mode');\r\n      } else {\r\n        root.style.setProperty('--background-color', '#ffffff');\r\n        root.style.setProperty('--card-background', '#f8f8f8');\r\n        root.style.setProperty('--border-color', '#e0e0e0');\r\n        root.style.setProperty('--text-color', settings.textColor || '#333333');\r\n        root.style.setProperty('--text-secondary-color', '#666666');\r\n        root.style.setProperty('--hover-background', '#f0f0f0');\r\n        root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.1)');\r\n        body.classList.remove('dark-mode');\r\n      }\r\n      \r\n      // 应用字体设置\r\n      if (settings.fontFamily) {\r\n        root.style.setProperty('--font-family', settings.fontFamily);\r\n      }\r\n      \r\n      // 使用背景管理器应用背景设置\r\n      backgroundManager.applySettings(settings);\r\n      \r\n    } catch (error) {\r\n      console.error('应用完整设置时出错:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 显示加载屏幕\r\n   * @private\r\n   */\r\n  _showLoadingScreen() {\r\n    // 检查是否已存在加载屏幕\r\n    if (document.getElementById('app-loading-screen')) {\r\n      return;\r\n    }\r\n\r\n    const loadingScreen = document.createElement('div');\r\n    loadingScreen.id = 'app-loading-screen';\r\n    loadingScreen.innerHTML = `\r\n      <div style=\"\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100vw;\r\n        height: 100vh;\r\n        background: var(--background-color, #ffffff);\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 9999;\r\n        transition: opacity 0.3s ease;\r\n      \">\r\n        <div style=\"\r\n          width: 60px;\r\n          height: 60px;\r\n          border: 3px solid var(--border-color, #e0e0e0);\r\n          border-top: 3px solid var(--primary-color, #4a90e2);\r\n          border-radius: 50%;\r\n          animation: spin 1s linear infinite;\r\n          margin-bottom: 20px;\r\n        \"></div>\r\n        <div style=\"\r\n          font-size: 18px;\r\n          font-weight: 500;\r\n          color: var(--text-color, #333333);\r\n          margin-bottom: 8px;\r\n        \">正在加载...</div>\r\n        <div style=\"\r\n          font-size: 14px;\r\n          color: var(--text-secondary-color, #666666);\r\n        \">请稍候，正在初始化应用程序</div>\r\n      </div>\r\n      <style>\r\n        @keyframes spin {\r\n          0% { transform: rotate(0deg); }\r\n          100% { transform: rotate(360deg); }\r\n        }\r\n      </style>\r\n    `;\r\n\r\n    document.body.appendChild(loadingScreen);\r\n  }\r\n\r\n  /**\r\n   * 隐藏加载屏幕\r\n   * @private\r\n   */\r\n  _hideLoadingScreen() {\r\n    const loadingScreen = document.getElementById('app-loading-screen');\r\n    if (loadingScreen) {\r\n      loadingScreen.style.opacity = '0';\r\n      setTimeout(() => {\r\n        if (loadingScreen.parentNode) {\r\n          loadingScreen.parentNode.removeChild(loadingScreen);\r\n        }\r\n      }, 300);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取当前设置\r\n   */\r\n  getSettings() {\r\n    return this.settings;\r\n  }\r\n\r\n  /**\r\n   * 更新设置\r\n   */\r\n  updateSettings(newSettings) {\r\n    this.settings = { ...this.settings, ...newSettings };\r\n    this._applyFullSettings(this.settings);\r\n  }\r\n\r\n  /**\r\n   * 重置初始化状态\r\n   */\r\n  reset() {\r\n    this.isInitialized = false;\r\n    this.initPromise = null;\r\n    this.settings = {};\r\n  }\r\n}\r\n\r\n// 创建单例实例\r\nconst appInitializer = new AppInitializer();\r\n\r\nexport default appInitializer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}