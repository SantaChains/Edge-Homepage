{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{getFromStorage,saveToStorage}from'../utils/storage';// 创建上下文\nimport{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();// 主题提供者组件\nexport const ThemeProvider=_ref=>{let{children}=_ref;// 状态\nconst[theme,setTheme]=useState('light');// 初始化主题\nuseEffect(()=>{const savedTheme=getFromStorage('homepage-theme','light');setTheme(savedTheme);document.documentElement.setAttribute('data-theme',savedTheme);},[]);// 切换主题\nconst toggleTheme=()=>{const newTheme=theme==='light'?'dark':'light';setTheme(newTheme);document.documentElement.setAttribute('data-theme',newTheme);// 添加额外的深色模式适配\nif(newTheme==='dark'){document.body.classList.add('dark-mode');}else{document.body.classList.remove('dark-mode');}saveToStorage('homepage-theme',newTheme);};// 设置特定主题\nconst setSpecificTheme=newTheme=>{setTheme(newTheme);saveToStorage('homepage-theme',newTheme);document.documentElement.setAttribute('data-theme',newTheme);};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme,setTheme:setSpecificTheme},children:children});};// 自定义钩子，用于访问主题上下文\nexport const useTheme=()=>{const context=useContext(ThemeContext);if(!context){throw new Error('useTheme必须在ThemeProvider内部使用');}return context;};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getFromStorage","saveToStorage","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","savedTheme","document","documentElement","setAttribute","toggleTheme","newTheme","body","classList","add","remove","setSpecificTheme","Provider","value","useTheme","context","Error"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/contexts/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { getFromStorage, saveToStorage } from '../utils/storage';\r\n\r\n// 创建上下文\r\nconst ThemeContext = createContext();\r\n\r\n// 主题提供者组件\r\nexport const ThemeProvider = ({ children }) => {\r\n  // 状态\r\n  const [theme, setTheme] = useState('light');\r\n  \r\n  // 初始化主题\r\n  useEffect(() => {\r\n    const savedTheme = getFromStorage('homepage-theme', 'light');\r\n    setTheme(savedTheme);\r\n    document.documentElement.setAttribute('data-theme', savedTheme);\r\n  }, []);\r\n  \r\n  // 切换主题\r\n  const toggleTheme = () => {\r\n    const newTheme = theme === 'light' ? 'dark' : 'light';\r\n    setTheme(newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n    \r\n    // 添加额外的深色模式适配\r\n    if (newTheme === 'dark') {\r\n      document.body.classList.add('dark-mode');\r\n    } else {\r\n      document.body.classList.remove('dark-mode');\r\n    }\r\n    \r\n    saveToStorage('homepage-theme', newTheme);\r\n  };\r\n  \r\n  // 设置特定主题\r\n  const setSpecificTheme = (newTheme) => {\r\n    setTheme(newTheme);\r\n    saveToStorage('homepage-theme', newTheme);\r\n    document.documentElement.setAttribute('data-theme', newTheme);\r\n  };\r\n  \r\n  return (\r\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme: setSpecificTheme }}>\r\n      {children}\r\n    </ThemeContext.Provider>\r\n  );\r\n};\r\n\r\n// 自定义钩子，用于访问主题上下文\r\nexport const useTheme = () => {\r\n  const context = useContext(ThemeContext);\r\n  if (!context) {\r\n    throw new Error('useTheme必须在ThemeProvider内部使用');\r\n  }\r\n  return context;\r\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,CAAEC,UAAU,KAAQ,OAAO,CAC7E,OAASC,cAAc,CAAEC,aAAa,KAAQ,kBAAkB,CAEhE;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,YAAY,cAAGR,aAAa,CAAC,CAAC,CAEpC;AACA,MAAO,MAAM,CAAAS,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC;AACA,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGZ,QAAQ,CAAC,OAAO,CAAC,CAE3C;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAY,UAAU,CAAGV,cAAc,CAAC,gBAAgB,CAAE,OAAO,CAAC,CAC5DS,QAAQ,CAACC,UAAU,CAAC,CACpBC,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEH,UAAU,CAAC,CACjE,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAI,WAAW,CAAGA,CAAA,GAAM,CACxB,KAAM,CAAAC,QAAQ,CAAGP,KAAK,GAAK,OAAO,CAAG,MAAM,CAAG,OAAO,CACrDC,QAAQ,CAACM,QAAQ,CAAC,CAClBJ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEE,QAAQ,CAAC,CAE7D;AACA,GAAIA,QAAQ,GAAK,MAAM,CAAE,CACvBJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC,CAC1C,CAAC,IAAM,CACLP,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC,CAC7C,CAEAlB,aAAa,CAAC,gBAAgB,CAAEc,QAAQ,CAAC,CAC3C,CAAC,CAED;AACA,KAAM,CAAAK,gBAAgB,CAAIL,QAAQ,EAAK,CACrCN,QAAQ,CAACM,QAAQ,CAAC,CAClBd,aAAa,CAAC,gBAAgB,CAAEc,QAAQ,CAAC,CACzCJ,QAAQ,CAACC,eAAe,CAACC,YAAY,CAAC,YAAY,CAAEE,QAAQ,CAAC,CAC/D,CAAC,CAED,mBACEZ,IAAA,CAACC,YAAY,CAACiB,QAAQ,EAACC,KAAK,CAAE,CAAEd,KAAK,CAAEM,WAAW,CAAEL,QAAQ,CAAEW,gBAAiB,CAAE,CAAAb,QAAA,CAC9EA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED;AACA,MAAO,MAAM,CAAAgB,QAAQ,CAAGA,CAAA,GAAM,CAC5B,KAAM,CAAAC,OAAO,CAAGzB,UAAU,CAACK,YAAY,CAAC,CACxC,GAAI,CAACoB,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,8BAA8B,CAAC,CACjD,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}