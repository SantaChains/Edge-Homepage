{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jliu Pureey\\\\Documents\\\\Editor\\\\extion\\\\homepage\\\\src\\\\components\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { formatDateTime } from '../../utils/dateTime';\nimport { useTheme } from '../../contexts/ThemeContext';\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\nimport LightModeIcon from '@mui/icons-material/LightMode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeaderContainer = styled.header`\n  text-align: center;\n  padding: 20px 0;\n  position: relative;\n`;\n_c = HeaderContainer;\nconst TimeDisplay = styled.div`\n  font-size: 3.5rem;\n  font-weight: 300;\n  margin-bottom: 5px;\n  color: var(--text-color);\n`;\n_c2 = TimeDisplay;\nconst DateDisplay = styled.div`\n  font-size: 1.2rem;\n  color: var(--text-secondary-color);\n`;\n_c3 = DateDisplay;\nconst ThemeToggleButton = styled.button`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n`;\n_c4 = ThemeToggleButton;\nconst Header = () => {\n  _s();\n  const [currentTime, setCurrentTime] = useState('');\n  const [currentDate, setCurrentDate] = useState('');\n  const {\n    theme,\n    toggleTheme\n  } = useTheme();\n  useEffect(() => {\n    // 更新时间和日期\n    const updateDateTime = () => {\n      const now = new Date();\n      setCurrentTime(formatDateTime(now, 'HH:mm:ss'));\n      setCurrentDate(formatDateTime(now, 'yyyy年MM月dd日 EEEE'));\n    };\n\n    // 立即更新一次\n    updateDateTime();\n\n    // 设置定时器，每秒更新一次\n    const timer = setInterval(updateDateTime, 1000);\n\n    // 组件卸载时清除定时器\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(HeaderContainer, {\n    children: [/*#__PURE__*/_jsxDEV(TimeDisplay, {\n      children: currentTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DateDisplay, {\n      children: currentDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ThemeToggleButton, {\n      onClick: toggleTheme,\n      title: theme === 'light' ? '切换到深色模式' : '切换到浅色模式',\n      children: theme === 'light' ? /*#__PURE__*/_jsxDEV(DarkModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(LightModeIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 49\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"n/75QRFA3+fXNI4vLdTinCcljfI=\", false, function () {\n  return [useTheme];\n});\n_c5 = Header;\nexport default Header;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"HeaderContainer\");\n$RefreshReg$(_c2, \"TimeDisplay\");\n$RefreshReg$(_c3, \"DateDisplay\");\n$RefreshReg$(_c4, \"ThemeToggleButton\");\n$RefreshReg$(_c5, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","styled","formatDateTime","useTheme","DarkModeIcon","LightModeIcon","jsxDEV","_jsxDEV","HeaderContainer","header","_c","TimeDisplay","div","_c2","DateDisplay","_c3","ThemeToggleButton","button","_c4","Header","_s","currentTime","setCurrentTime","currentDate","setCurrentDate","theme","toggleTheme","updateDateTime","now","Date","timer","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","_c5","$RefreshReg$"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatDateTime } from '../../utils/dateTime';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\n\r\nconst HeaderContainer = styled.header`\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst TimeDisplay = styled.div`\r\n  font-size: 3.5rem;\r\n  font-weight: 300;\r\n  margin-bottom: 5px;\r\n  color: var(--text-color);\r\n`;\r\n\r\nconst DateDisplay = styled.div`\r\n  font-size: 1.2rem;\r\n  color: var(--text-secondary-color);\r\n`;\r\n\r\nconst ThemeToggleButton = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  \r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  const [currentTime, setCurrentTime] = useState('');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const { theme, toggleTheme } = useTheme();\r\n  \r\n  useEffect(() => {\r\n    // 更新时间和日期\r\n    const updateDateTime = () => {\r\n      const now = new Date();\r\n      setCurrentTime(formatDateTime(now, 'HH:mm:ss'));\r\n      setCurrentDate(formatDateTime(now, 'yyyy年MM月dd日 EEEE'));\r\n    };\r\n    \r\n    // 立即更新一次\r\n    updateDateTime();\r\n    \r\n    // 设置定时器，每秒更新一次\r\n    const timer = setInterval(updateDateTime, 1000);\r\n    \r\n    // 组件卸载时清除定时器\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n  \r\n  return (\r\n    <HeaderContainer>\r\n      <TimeDisplay>{currentTime}</TimeDisplay>\r\n      <DateDisplay>{currentDate}</DateDisplay>\r\n      <ThemeToggleButton onClick={toggleTheme} title={theme === 'light' ? '切换到深色模式' : '切换到浅色模式'}>\r\n        {theme === 'light' ? <DarkModeIcon /> : <LightModeIcon />}\r\n      </ThemeToggleButton>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}