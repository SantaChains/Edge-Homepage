{"ast":null,"code":"/**\r\n * 从本地存储中获取数据\r\n * @param {string} key - 存储键名\r\n * @param {any} defaultValue - 默认值，如果存储中没有对应的值\r\n * @returns {any} 存储的值或默认值\r\n */\nexport const getFromStorage = (key, defaultValue = null) => {\n  try {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  } catch (error) {\n    console.error(`从存储中获取 ${key} 失败:`, error);\n    return defaultValue;\n  }\n};\n\n/**\r\n * 保存数据到本地存储\r\n * @param {string} key - 存储键名\r\n * @param {any} value - 要存储的值\r\n * @returns {boolean} 是否成功保存\r\n */\nexport const saveToStorage = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n    return true;\n  } catch (error) {\n    console.error(`保存 ${key} 到存储失败:`, error);\n    return false;\n  }\n};\n\n/**\r\n * 从本地存储中删除数据\r\n * @param {string} key - 存储键名\r\n * @returns {boolean} 是否成功删除\r\n */\nexport const removeFromStorage = key => {\n  try {\n    localStorage.removeItem(key);\n    return true;\n  } catch (error) {\n    console.error(`从存储中删除 ${key} 失败:`, error);\n    return false;\n  }\n};\n\n/**\r\n * 清空本地存储\r\n * @returns {boolean} 是否成功清空\r\n */\nexport const clearStorage = () => {\n  try {\n    localStorage.clear();\n    return true;\n  } catch (error) {\n    console.error('清空存储失败:', error);\n    return false;\n  }\n};\n\n/**\r\n * 获取所有存储的键\r\n * @returns {string[]} 所有存储的键\r\n */\nexport const getAllStorageKeys = () => {\n  try {\n    return Object.keys(localStorage);\n  } catch (error) {\n    console.error('获取所有存储键失败:', error);\n    return [];\n  }\n};\n\n/**\r\n * 导出所有存储数据为JSON文件\r\n * @param {string} filename - 导出的文件名\r\n */\nexport const exportStorageToFile = (filename = 'homepage-backup.json') => {\n  try {\n    const data = {};\n    const keys = getAllStorageKeys();\n    keys.forEach(key => {\n      if (key.startsWith('homepage-')) {\n        data[key] = getFromStorage(key);\n      }\n    });\n    const dataStr = JSON.stringify(data, null, 2);\n    const dataUri = 'data:application/json;charset=utf-8,' + encodeURIComponent(dataStr);\n    const linkElement = document.createElement('a');\n    linkElement.setAttribute('href', dataUri);\n    linkElement.setAttribute('download', filename);\n    linkElement.click();\n    return true;\n  } catch (error) {\n    console.error('导出存储数据失败:', error);\n    return false;\n  }\n};\n\n/**\r\n * 从JSON文件导入存储数据\r\n * @param {string} jsonString - JSON字符串\r\n * @returns {boolean} 是否成功导入\r\n */\nexport const importStorageFromJson = jsonString => {\n  try {\n    const data = JSON.parse(jsonString);\n    Object.keys(data).forEach(key => {\n      if (key.startsWith('homepage-')) {\n        saveToStorage(key, data[key]);\n      }\n    });\n    return true;\n  } catch (error) {\n    console.error('导入存储数据失败:', error);\n    return false;\n  }\n};","map":{"version":3,"names":["getFromStorage","key","defaultValue","item","localStorage","getItem","JSON","parse","error","console","saveToStorage","value","setItem","stringify","removeFromStorage","removeItem","clearStorage","clear","getAllStorageKeys","Object","keys","exportStorageToFile","filename","data","forEach","startsWith","dataStr","dataUri","encodeURIComponent","linkElement","document","createElement","setAttribute","click","importStorageFromJson","jsonString"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/utils/storage.js"],"sourcesContent":["/**\r\n * 从本地存储中获取数据\r\n * @param {string} key - 存储键名\r\n * @param {any} defaultValue - 默认值，如果存储中没有对应的值\r\n * @returns {any} 存储的值或默认值\r\n */\r\nexport const getFromStorage = (key, defaultValue = null) => {\r\n  try {\r\n    const item = localStorage.getItem(key);\r\n    return item ? JSON.parse(item) : defaultValue;\r\n  } catch (error) {\r\n    console.error(`从存储中获取 ${key} 失败:`, error);\r\n    return defaultValue;\r\n  }\r\n};\r\n\r\n/**\r\n * 保存数据到本地存储\r\n * @param {string} key - 存储键名\r\n * @param {any} value - 要存储的值\r\n * @returns {boolean} 是否成功保存\r\n */\r\nexport const saveToStorage = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n    return true;\r\n  } catch (error) {\r\n    console.error(`保存 ${key} 到存储失败:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 从本地存储中删除数据\r\n * @param {string} key - 存储键名\r\n * @returns {boolean} 是否成功删除\r\n */\r\nexport const removeFromStorage = (key) => {\r\n  try {\r\n    localStorage.removeItem(key);\r\n    return true;\r\n  } catch (error) {\r\n    console.error(`从存储中删除 ${key} 失败:`, error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 清空本地存储\r\n * @returns {boolean} 是否成功清空\r\n */\r\nexport const clearStorage = () => {\r\n  try {\r\n    localStorage.clear();\r\n    return true;\r\n  } catch (error) {\r\n    console.error('清空存储失败:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 获取所有存储的键\r\n * @returns {string[]} 所有存储的键\r\n */\r\nexport const getAllStorageKeys = () => {\r\n  try {\r\n    return Object.keys(localStorage);\r\n  } catch (error) {\r\n    console.error('获取所有存储键失败:', error);\r\n    return [];\r\n  }\r\n};\r\n\r\n/**\r\n * 导出所有存储数据为JSON文件\r\n * @param {string} filename - 导出的文件名\r\n */\r\nexport const exportStorageToFile = (filename = 'homepage-backup.json') => {\r\n  try {\r\n    const data = {};\r\n    const keys = getAllStorageKeys();\r\n    \r\n    keys.forEach(key => {\r\n      if (key.startsWith('homepage-')) {\r\n        data[key] = getFromStorage(key);\r\n      }\r\n    });\r\n    \r\n    const dataStr = JSON.stringify(data, null, 2);\r\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n    \r\n    const linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', filename);\r\n    linkElement.click();\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('导出存储数据失败:', error);\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * 从JSON文件导入存储数据\r\n * @param {string} jsonString - JSON字符串\r\n * @returns {boolean} 是否成功导入\r\n */\r\nexport const importStorageFromJson = (jsonString) => {\r\n  try {\r\n    const data = JSON.parse(jsonString);\r\n    \r\n    Object.keys(data).forEach(key => {\r\n      if (key.startsWith('homepage-')) {\r\n        saveToStorage(key, data[key]);\r\n      }\r\n    });\r\n    \r\n    return true;\r\n  } catch (error) {\r\n    console.error('导入存储数据失败:', error);\r\n    return false;\r\n  }\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}