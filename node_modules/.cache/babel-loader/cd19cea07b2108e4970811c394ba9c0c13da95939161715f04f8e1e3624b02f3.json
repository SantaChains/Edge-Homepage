{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jliu Pureey\\\\Documents\\\\Editor\\\\extion\\\\homepage\\\\src\\\\contexts\\\\SettingsContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\nimport { getFromStorage, saveToStorage } from '../utils/storage';\n\n// 默认设置\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultSettings = {\n  theme: 'light',\n  startupModule: {\n    type: 'last',\n    // 'last' | 'specific'\n    module: 'quote' // 当 type 为 'specific' 时使用\n  },\n  background: {\n    type: 'color',\n    // 'color' | 'image' | 'gradient'\n    value: '#ffffff',\n    opacity: 1,\n    brightness: 1,\n    blurAmount: 0,\n    size: 'cover',\n    repeat: 'no-repeat',\n    overlayOpacity: 0\n  },\n  search: {\n    defaultEngine: 'bing',\n    autoCleanUrl: false,\n    removeNonUrl: false,\n    openInNewTab: true,\n    customEngines: []\n  },\n  modules: {\n    calendar: {\n      showWeather: true,\n      showCountdown: true\n    },\n    bookmark: {\n      showFavicons: true,\n      gridColumns: 4\n    },\n    todo: {\n      showCompleted: false,\n      autoSort: true\n    },\n    note: {\n      autoSave: true,\n      fontSize: 14\n    },\n    quote: {\n      autoRefresh: true,\n      refreshInterval: 3600000 // 1小时\n    },\n    news: {\n      sources: ['tech', 'general'],\n      refreshInterval: 1800000 // 30分钟\n    }\n  }\n};\n\n// 创建上下文\nexport const SettingsContext = /*#__PURE__*/createContext({\n  settings: defaultSettings,\n  isLoaded: false,\n  updateSettings: () => {},\n  updateSpecificSettings: () => {},\n  resetSettings: () => {}\n});\n\n// 设置提供者组件\nexport const SettingsProvider = ({\n  children\n}) => {\n  _s();\n  const [settings, setSettings] = useState(defaultSettings);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  // 应用设置到DOM\n  const applySettings = useCallback(settingsToApply => {\n    try {\n      const root = document.documentElement;\n\n      // 应用主题\n      if (settingsToApply.theme) {\n        root.setAttribute('data-theme', settingsToApply.theme);\n        if (settingsToApply.theme === 'dark') {\n          // 深色模式CSS变量\n          root.style.setProperty('--background-color', '#121212');\n          root.style.setProperty('--card-background', '#1e1e1e');\n          root.style.setProperty('--border-color', '#333333');\n          root.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.3)');\n          root.style.setProperty('--text-color', '#e0e0e0');\n          root.style.setProperty('--text-secondary-color', '#a0a0a0');\n          root.style.setProperty('--primary-color', '#4a90e2');\n          root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.2)');\n          root.style.setProperty('--transition-speed', '0.3s');\n          document.body.classList.add('dark-mode');\n        } else {\n          // 浅色模式CSS变量\n          root.style.setProperty('--background-color', '#ffffff');\n          root.style.setProperty('--card-background', '#f8f8f8');\n          root.style.setProperty('--border-color', '#e0e0e0');\n          root.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.1)');\n          root.style.setProperty('--text-color', '#333333');\n          root.style.setProperty('--text-secondary-color', '#666666');\n          root.style.setProperty('--primary-color', '#4a90e2');\n          root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.1)');\n          root.style.setProperty('--transition-speed', '0.3s');\n          document.body.classList.remove('dark-mode');\n        }\n      }\n\n      // 应用背景设置\n      if (settingsToApply.background) {\n        const body = document.body;\n        const bg = settingsToApply.background;\n        if (bg.type === 'color') {\n          body.style.background = bg.value || '#ffffff';\n          body.style.backgroundImage = 'none';\n        } else if (bg.type === 'image' && bg.value) {\n          body.style.backgroundImage = `url(${bg.value})`;\n          body.style.backgroundSize = bg.size || 'cover';\n          body.style.backgroundPosition = 'center';\n          body.style.backgroundRepeat = bg.repeat || 'no-repeat';\n          body.style.backgroundAttachment = 'fixed';\n        } else if (bg.type === 'gradient' && bg.value) {\n          body.style.background = bg.value;\n          body.style.backgroundImage = 'none';\n        }\n\n        // 应用背景效果\n        if (bg.opacity !== undefined) {\n          body.style.opacity = bg.opacity;\n        }\n        if (bg.brightness !== undefined) {\n          body.style.filter = `brightness(${bg.brightness})`;\n        }\n      }\n    } catch (error) {\n      console.error('应用设置时出错:', error);\n    }\n  }, []);\n\n  // 初始化设置\n  useEffect(() => {\n    const initializeSettings = () => {\n      try {\n        // 从本地存储获取设置\n        const savedSettings = getFromStorage('homepage-settings', null);\n        if (savedSettings) {\n          var _savedSettings$module, _savedSettings$module2, _savedSettings$module3, _savedSettings$module4, _savedSettings$module5, _savedSettings$module6;\n          // 合并默认设置和保存的设置\n          const mergedSettings = {\n            ...defaultSettings,\n            ...savedSettings,\n            // 深度合并嵌套对象\n            startupModule: {\n              ...defaultSettings.startupModule,\n              ...(savedSettings.startupModule || {})\n            },\n            background: {\n              ...defaultSettings.background,\n              ...(savedSettings.background || {})\n            },\n            search: {\n              ...defaultSettings.search,\n              ...(savedSettings.search || {})\n            },\n            modules: {\n              ...defaultSettings.modules,\n              ...(savedSettings.modules || {}),\n              calendar: {\n                ...defaultSettings.modules.calendar,\n                ...(((_savedSettings$module = savedSettings.modules) === null || _savedSettings$module === void 0 ? void 0 : _savedSettings$module.calendar) || {})\n              },\n              bookmark: {\n                ...defaultSettings.modules.bookmark,\n                ...(((_savedSettings$module2 = savedSettings.modules) === null || _savedSettings$module2 === void 0 ? void 0 : _savedSettings$module2.bookmark) || {})\n              },\n              todo: {\n                ...defaultSettings.modules.todo,\n                ...(((_savedSettings$module3 = savedSettings.modules) === null || _savedSettings$module3 === void 0 ? void 0 : _savedSettings$module3.todo) || {})\n              },\n              note: {\n                ...defaultSettings.modules.note,\n                ...(((_savedSettings$module4 = savedSettings.modules) === null || _savedSettings$module4 === void 0 ? void 0 : _savedSettings$module4.note) || {})\n              },\n              quote: {\n                ...defaultSettings.modules.quote,\n                ...(((_savedSettings$module5 = savedSettings.modules) === null || _savedSettings$module5 === void 0 ? void 0 : _savedSettings$module5.quote) || {})\n              },\n              news: {\n                ...defaultSettings.modules.news,\n                ...(((_savedSettings$module6 = savedSettings.modules) === null || _savedSettings$module6 === void 0 ? void 0 : _savedSettings$module6.news) || {})\n              }\n            }\n          };\n          setSettings(mergedSettings);\n          applySettings(mergedSettings);\n        } else {\n          // 如果没有保存的设置，使用默认设置\n          setSettings(defaultSettings);\n          applySettings(defaultSettings);\n          // 保存默认设置到本地存储\n          saveToStorage('homepage-settings', defaultSettings);\n        }\n      } catch (error) {\n        console.error('初始化设置时出错:', error);\n        // 出错时使用默认设置\n        setSettings(defaultSettings);\n        applySettings(defaultSettings);\n      } finally {\n        setIsLoaded(true);\n      }\n    };\n\n    // 延迟初始化以避免闪烁\n    const timer = setTimeout(initializeSettings, 100);\n    return () => clearTimeout(timer);\n  }, [applySettings]);\n\n  // 更新设置\n  const updateSettings = useCallback(newSettings => {\n    try {\n      const updatedSettings = {\n        ...settings,\n        ...newSettings\n      };\n      setSettings(updatedSettings);\n      applySettings(updatedSettings);\n      saveToStorage('homepage-settings', updatedSettings);\n    } catch (error) {\n      console.error('更新设置时出错:', error);\n    }\n  }, [settings, applySettings]);\n\n  // 更新特定设置\n  const updateSpecificSettings = useCallback((path, value) => {\n    try {\n      const pathArray = path.split('.');\n      const updatedSettings = {\n        ...settings\n      };\n\n      // 深度设置值\n      let current = updatedSettings;\n      for (let i = 0; i < pathArray.length - 1; i++) {\n        const key = pathArray[i];\n        if (!current[key] || typeof current[key] !== 'object') {\n          current[key] = {};\n        } else {\n          current[key] = {\n            ...current[key]\n          };\n        }\n        current = current[key];\n      }\n      current[pathArray[pathArray.length - 1]] = value;\n      setSettings(updatedSettings);\n      applySettings(updatedSettings);\n      saveToStorage('homepage-settings', updatedSettings);\n    } catch (error) {\n      console.error('更新特定设置时出错:', error);\n    }\n  }, [settings, applySettings]);\n\n  // 重置设置\n  const resetSettings = useCallback(() => {\n    try {\n      setSettings(defaultSettings);\n      applySettings(defaultSettings);\n      saveToStorage('homepage-settings', defaultSettings);\n    } catch (error) {\n      console.error('重置设置时出错:', error);\n    }\n  }, [applySettings]);\n  const contextValue = {\n    settings,\n    isLoaded,\n    updateSettings,\n    updateSpecificSettings,\n    resetSettings\n  };\n  return /*#__PURE__*/_jsxDEV(SettingsContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 280,\n    columnNumber: 5\n  }, this);\n};\n\n// 自定义 hook 用于使用设置\n_s(SettingsProvider, \"1+vkf80CWF6clbQHnS/yR0/pVyU=\");\n_c = SettingsProvider;\nexport const useSettings = () => {\n  _s2();\n  const context = useContext(SettingsContext);\n  if (!context) {\n    throw new Error('useSettings must be used within a SettingsProvider');\n  }\n  return context;\n};\n_s2(useSettings, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default SettingsContext;\nvar _c;\n$RefreshReg$(_c, \"SettingsProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","useContext","getFromStorage","saveToStorage","jsxDEV","_jsxDEV","defaultSettings","theme","startupModule","type","module","background","value","opacity","brightness","blurAmount","size","repeat","overlayOpacity","search","defaultEngine","autoCleanUrl","removeNonUrl","openInNewTab","customEngines","modules","calendar","showWeather","showCountdown","bookmark","showFavicons","gridColumns","todo","showCompleted","autoSort","note","autoSave","fontSize","quote","autoRefresh","refreshInterval","news","sources","SettingsContext","settings","isLoaded","updateSettings","updateSpecificSettings","resetSettings","SettingsProvider","children","_s","setSettings","setIsLoaded","applySettings","settingsToApply","root","document","documentElement","setAttribute","style","setProperty","body","classList","add","remove","bg","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","backgroundAttachment","undefined","filter","error","console","initializeSettings","savedSettings","_savedSettings$module","_savedSettings$module2","_savedSettings$module3","_savedSettings$module4","_savedSettings$module5","_savedSettings$module6","mergedSettings","timer","setTimeout","clearTimeout","newSettings","updatedSettings","path","pathArray","split","current","i","length","key","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useSettings","_s2","context","Error","$RefreshReg$"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/contexts/SettingsContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback, useContext } from 'react';\r\nimport { getFromStorage, saveToStorage } from '../utils/storage';\r\n\r\n// 默认设置\r\nconst defaultSettings = {\r\n  theme: 'light',\r\n  startupModule: {\r\n    type: 'last', // 'last' | 'specific'\r\n    module: 'quote' // 当 type 为 'specific' 时使用\r\n  },\r\n  background: {\r\n    type: 'color', // 'color' | 'image' | 'gradient'\r\n    value: '#ffffff',\r\n    opacity: 1,\r\n    brightness: 1,\r\n    blurAmount: 0,\r\n    size: 'cover',\r\n    repeat: 'no-repeat',\r\n    overlayOpacity: 0\r\n  },\r\n  search: {\r\n    defaultEngine: 'bing',\r\n    autoCleanUrl: false,\r\n    removeNonUrl: false,\r\n    openInNewTab: true,\r\n    customEngines: []\r\n  },\r\n  modules: {\r\n    calendar: {\r\n      showWeather: true,\r\n      showCountdown: true\r\n    },\r\n    bookmark: {\r\n      showFavicons: true,\r\n      gridColumns: 4\r\n    },\r\n    todo: {\r\n      showCompleted: false,\r\n      autoSort: true\r\n    },\r\n    note: {\r\n      autoSave: true,\r\n      fontSize: 14\r\n    },\r\n    quote: {\r\n      autoRefresh: true,\r\n      refreshInterval: 3600000 // 1小时\r\n    },\r\n    news: {\r\n      sources: ['tech', 'general'],\r\n      refreshInterval: 1800000 // 30分钟\r\n    }\r\n  }\r\n};\r\n\r\n// 创建上下文\r\nexport const SettingsContext = createContext({\r\n  settings: defaultSettings,\r\n  isLoaded: false,\r\n  updateSettings: () => {},\r\n  updateSpecificSettings: () => {},\r\n  resetSettings: () => {}\r\n});\r\n\r\n// 设置提供者组件\r\nexport const SettingsProvider = ({ children }) => {\r\n  const [settings, setSettings] = useState(defaultSettings);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  // 应用设置到DOM\r\n  const applySettings = useCallback((settingsToApply) => {\r\n    try {\r\n      const root = document.documentElement;\r\n      \r\n      // 应用主题\r\n      if (settingsToApply.theme) {\r\n        root.setAttribute('data-theme', settingsToApply.theme);\r\n        \r\n        if (settingsToApply.theme === 'dark') {\r\n          // 深色模式CSS变量\r\n          root.style.setProperty('--background-color', '#121212');\r\n          root.style.setProperty('--card-background', '#1e1e1e');\r\n          root.style.setProperty('--border-color', '#333333');\r\n          root.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.3)');\r\n          root.style.setProperty('--text-color', '#e0e0e0');\r\n          root.style.setProperty('--text-secondary-color', '#a0a0a0');\r\n          root.style.setProperty('--primary-color', '#4a90e2');\r\n          root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.2)');\r\n          root.style.setProperty('--transition-speed', '0.3s');\r\n          document.body.classList.add('dark-mode');\r\n        } else {\r\n          // 浅色模式CSS变量\r\n          root.style.setProperty('--background-color', '#ffffff');\r\n          root.style.setProperty('--card-background', '#f8f8f8');\r\n          root.style.setProperty('--border-color', '#e0e0e0');\r\n          root.style.setProperty('--shadow-color', 'rgba(0, 0, 0, 0.1)');\r\n          root.style.setProperty('--text-color', '#333333');\r\n          root.style.setProperty('--text-secondary-color', '#666666');\r\n          root.style.setProperty('--primary-color', '#4a90e2');\r\n          root.style.setProperty('--primary-color-light', 'rgba(74, 144, 226, 0.1)');\r\n          root.style.setProperty('--transition-speed', '0.3s');\r\n          document.body.classList.remove('dark-mode');\r\n        }\r\n      }\r\n      \r\n      // 应用背景设置\r\n      if (settingsToApply.background) {\r\n        const body = document.body;\r\n        const bg = settingsToApply.background;\r\n        \r\n        if (bg.type === 'color') {\r\n          body.style.background = bg.value || '#ffffff';\r\n          body.style.backgroundImage = 'none';\r\n        } else if (bg.type === 'image' && bg.value) {\r\n          body.style.backgroundImage = `url(${bg.value})`;\r\n          body.style.backgroundSize = bg.size || 'cover';\r\n          body.style.backgroundPosition = 'center';\r\n          body.style.backgroundRepeat = bg.repeat || 'no-repeat';\r\n          body.style.backgroundAttachment = 'fixed';\r\n        } else if (bg.type === 'gradient' && bg.value) {\r\n          body.style.background = bg.value;\r\n          body.style.backgroundImage = 'none';\r\n        }\r\n        \r\n        // 应用背景效果\r\n        if (bg.opacity !== undefined) {\r\n          body.style.opacity = bg.opacity;\r\n        }\r\n        if (bg.brightness !== undefined) {\r\n          body.style.filter = `brightness(${bg.brightness})`;\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('应用设置时出错:', error);\r\n    }\r\n  }, []);\r\n\r\n  // 初始化设置\r\n  useEffect(() => {\r\n    const initializeSettings = () => {\r\n      try {\r\n        // 从本地存储获取设置\r\n        const savedSettings = getFromStorage('homepage-settings', null);\r\n        \r\n        if (savedSettings) {\r\n          // 合并默认设置和保存的设置\r\n          const mergedSettings = {\r\n            ...defaultSettings,\r\n            ...savedSettings,\r\n            // 深度合并嵌套对象\r\n            startupModule: {\r\n              ...defaultSettings.startupModule,\r\n              ...(savedSettings.startupModule || {})\r\n            },\r\n            background: {\r\n              ...defaultSettings.background,\r\n              ...(savedSettings.background || {})\r\n            },\r\n            search: {\r\n              ...defaultSettings.search,\r\n              ...(savedSettings.search || {})\r\n            },\r\n            modules: {\r\n              ...defaultSettings.modules,\r\n              ...(savedSettings.modules || {}),\r\n              calendar: {\r\n                ...defaultSettings.modules.calendar,\r\n                ...(savedSettings.modules?.calendar || {})\r\n              },\r\n              bookmark: {\r\n                ...defaultSettings.modules.bookmark,\r\n                ...(savedSettings.modules?.bookmark || {})\r\n              },\r\n              todo: {\r\n                ...defaultSettings.modules.todo,\r\n                ...(savedSettings.modules?.todo || {})\r\n              },\r\n              note: {\r\n                ...defaultSettings.modules.note,\r\n                ...(savedSettings.modules?.note || {})\r\n              },\r\n              quote: {\r\n                ...defaultSettings.modules.quote,\r\n                ...(savedSettings.modules?.quote || {})\r\n              },\r\n              news: {\r\n                ...defaultSettings.modules.news,\r\n                ...(savedSettings.modules?.news || {})\r\n              }\r\n            }\r\n          };\r\n          \r\n          setSettings(mergedSettings);\r\n          applySettings(mergedSettings);\r\n        } else {\r\n          // 如果没有保存的设置，使用默认设置\r\n          setSettings(defaultSettings);\r\n          applySettings(defaultSettings);\r\n          // 保存默认设置到本地存储\r\n          saveToStorage('homepage-settings', defaultSettings);\r\n        }\r\n      } catch (error) {\r\n        console.error('初始化设置时出错:', error);\r\n        // 出错时使用默认设置\r\n        setSettings(defaultSettings);\r\n        applySettings(defaultSettings);\r\n      } finally {\r\n        setIsLoaded(true);\r\n      }\r\n    };\r\n\r\n    // 延迟初始化以避免闪烁\r\n    const timer = setTimeout(initializeSettings, 100);\r\n    return () => clearTimeout(timer);\r\n  }, [applySettings]);\r\n\r\n  // 更新设置\r\n  const updateSettings = useCallback((newSettings) => {\r\n    try {\r\n      const updatedSettings = {\r\n        ...settings,\r\n        ...newSettings\r\n      };\r\n      \r\n      setSettings(updatedSettings);\r\n      applySettings(updatedSettings);\r\n      saveToStorage('homepage-settings', updatedSettings);\r\n    } catch (error) {\r\n      console.error('更新设置时出错:', error);\r\n    }\r\n  }, [settings, applySettings]);\r\n\r\n  // 更新特定设置\r\n  const updateSpecificSettings = useCallback((path, value) => {\r\n    try {\r\n      const pathArray = path.split('.');\r\n      const updatedSettings = { ...settings };\r\n      \r\n      // 深度设置值\r\n      let current = updatedSettings;\r\n      for (let i = 0; i < pathArray.length - 1; i++) {\r\n        const key = pathArray[i];\r\n        if (!current[key] || typeof current[key] !== 'object') {\r\n          current[key] = {};\r\n        } else {\r\n          current[key] = { ...current[key] };\r\n        }\r\n        current = current[key];\r\n      }\r\n      current[pathArray[pathArray.length - 1]] = value;\r\n      \r\n      setSettings(updatedSettings);\r\n      applySettings(updatedSettings);\r\n      saveToStorage('homepage-settings', updatedSettings);\r\n    } catch (error) {\r\n      console.error('更新特定设置时出错:', error);\r\n    }\r\n  }, [settings, applySettings]);\r\n\r\n  // 重置设置\r\n  const resetSettings = useCallback(() => {\r\n    try {\r\n      setSettings(defaultSettings);\r\n      applySettings(defaultSettings);\r\n      saveToStorage('homepage-settings', defaultSettings);\r\n    } catch (error) {\r\n      console.error('重置设置时出错:', error);\r\n    }\r\n  }, [applySettings]);\r\n\r\n  const contextValue = {\r\n    settings,\r\n    isLoaded,\r\n    updateSettings,\r\n    updateSpecificSettings,\r\n    resetSettings\r\n  };\r\n\r\n  return (\r\n    <SettingsContext.Provider value={contextValue}>\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\n// 自定义 hook 用于使用设置\r\nexport const useSettings = () => {\r\n  const context = useContext(SettingsContext);\r\n  if (!context) {\r\n    throw new Error('useSettings must be used within a SettingsProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport default SettingsContext;"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,UAAU,QAAQ,OAAO;AAC1F,SAASC,cAAc,EAAEC,aAAa,QAAQ,kBAAkB;;AAEhE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,eAAe,GAAG;EACtBC,KAAK,EAAE,OAAO;EACdC,aAAa,EAAE;IACbC,IAAI,EAAE,MAAM;IAAE;IACdC,MAAM,EAAE,OAAO,CAAC;EAClB,CAAC;EACDC,UAAU,EAAE;IACVF,IAAI,EAAE,OAAO;IAAE;IACfG,KAAK,EAAE,SAAS;IAChBC,OAAO,EAAE,CAAC;IACVC,UAAU,EAAE,CAAC;IACbC,UAAU,EAAE,CAAC;IACbC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE,WAAW;IACnBC,cAAc,EAAE;EAClB,CAAC;EACDC,MAAM,EAAE;IACNC,aAAa,EAAE,MAAM;IACrBC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,KAAK;IACnBC,YAAY,EAAE,IAAI;IAClBC,aAAa,EAAE;EACjB,CAAC;EACDC,OAAO,EAAE;IACPC,QAAQ,EAAE;MACRC,WAAW,EAAE,IAAI;MACjBC,aAAa,EAAE;IACjB,CAAC;IACDC,QAAQ,EAAE;MACRC,YAAY,EAAE,IAAI;MAClBC,WAAW,EAAE;IACf,CAAC;IACDC,IAAI,EAAE;MACJC,aAAa,EAAE,KAAK;MACpBC,QAAQ,EAAE;IACZ,CAAC;IACDC,IAAI,EAAE;MACJC,QAAQ,EAAE,IAAI;MACdC,QAAQ,EAAE;IACZ,CAAC;IACDC,KAAK,EAAE;MACLC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAE,OAAO,CAAC;IAC3B,CAAC;IACDC,IAAI,EAAE;MACJC,OAAO,EAAE,CAAC,MAAM,EAAE,SAAS,CAAC;MAC5BF,eAAe,EAAE,OAAO,CAAC;IAC3B;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,eAAe,gBAAG9C,aAAa,CAAC;EAC3C+C,QAAQ,EAAEtC,eAAe;EACzBuC,QAAQ,EAAE,KAAK;EACfC,cAAc,EAAEA,CAAA,KAAM,CAAC,CAAC;EACxBC,sBAAsB,EAAEA,CAAA,KAAM,CAAC,CAAC;EAChCC,aAAa,EAAEA,CAAA,KAAM,CAAC;AACxB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACP,QAAQ,EAAEQ,WAAW,CAAC,GAAGtD,QAAQ,CAACQ,eAAe,CAAC;EACzD,MAAM,CAACuC,QAAQ,EAAEQ,WAAW,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACA,MAAMwD,aAAa,GAAGtD,WAAW,CAAEuD,eAAe,IAAK;IACrD,IAAI;MACF,MAAMC,IAAI,GAAGC,QAAQ,CAACC,eAAe;;MAErC;MACA,IAAIH,eAAe,CAAChD,KAAK,EAAE;QACzBiD,IAAI,CAACG,YAAY,CAAC,YAAY,EAAEJ,eAAe,CAAChD,KAAK,CAAC;QAEtD,IAAIgD,eAAe,CAAChD,KAAK,KAAK,MAAM,EAAE;UACpC;UACAiD,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,SAAS,CAAC;UACvDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAE,SAAS,CAAC;UACtDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE,SAAS,CAAC;UACnDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;UAC9DL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,cAAc,EAAE,SAAS,CAAC;UACjDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,wBAAwB,EAAE,SAAS,CAAC;UAC3DL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC;UACpDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,uBAAuB,EAAE,yBAAyB,CAAC;UAC1EL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,MAAM,CAAC;UACpDJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;QAC1C,CAAC,MAAM;UACL;UACAR,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,SAAS,CAAC;UACvDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,mBAAmB,EAAE,SAAS,CAAC;UACtDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE,SAAS,CAAC;UACnDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,gBAAgB,EAAE,oBAAoB,CAAC;UAC9DL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,cAAc,EAAE,SAAS,CAAC;UACjDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,wBAAwB,EAAE,SAAS,CAAC;UAC3DL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,iBAAiB,EAAE,SAAS,CAAC;UACpDL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,uBAAuB,EAAE,yBAAyB,CAAC;UAC1EL,IAAI,CAACI,KAAK,CAACC,WAAW,CAAC,oBAAoB,EAAE,MAAM,CAAC;UACpDJ,QAAQ,CAACK,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;QAC7C;MACF;;MAEA;MACA,IAAIV,eAAe,CAAC5C,UAAU,EAAE;QAC9B,MAAMmD,IAAI,GAAGL,QAAQ,CAACK,IAAI;QAC1B,MAAMI,EAAE,GAAGX,eAAe,CAAC5C,UAAU;QAErC,IAAIuD,EAAE,CAACzD,IAAI,KAAK,OAAO,EAAE;UACvBqD,IAAI,CAACF,KAAK,CAACjD,UAAU,GAAGuD,EAAE,CAACtD,KAAK,IAAI,SAAS;UAC7CkD,IAAI,CAACF,KAAK,CAACO,eAAe,GAAG,MAAM;QACrC,CAAC,MAAM,IAAID,EAAE,CAACzD,IAAI,KAAK,OAAO,IAAIyD,EAAE,CAACtD,KAAK,EAAE;UAC1CkD,IAAI,CAACF,KAAK,CAACO,eAAe,GAAG,OAAOD,EAAE,CAACtD,KAAK,GAAG;UAC/CkD,IAAI,CAACF,KAAK,CAACQ,cAAc,GAAGF,EAAE,CAAClD,IAAI,IAAI,OAAO;UAC9C8C,IAAI,CAACF,KAAK,CAACS,kBAAkB,GAAG,QAAQ;UACxCP,IAAI,CAACF,KAAK,CAACU,gBAAgB,GAAGJ,EAAE,CAACjD,MAAM,IAAI,WAAW;UACtD6C,IAAI,CAACF,KAAK,CAACW,oBAAoB,GAAG,OAAO;QAC3C,CAAC,MAAM,IAAIL,EAAE,CAACzD,IAAI,KAAK,UAAU,IAAIyD,EAAE,CAACtD,KAAK,EAAE;UAC7CkD,IAAI,CAACF,KAAK,CAACjD,UAAU,GAAGuD,EAAE,CAACtD,KAAK;UAChCkD,IAAI,CAACF,KAAK,CAACO,eAAe,GAAG,MAAM;QACrC;;QAEA;QACA,IAAID,EAAE,CAACrD,OAAO,KAAK2D,SAAS,EAAE;UAC5BV,IAAI,CAACF,KAAK,CAAC/C,OAAO,GAAGqD,EAAE,CAACrD,OAAO;QACjC;QACA,IAAIqD,EAAE,CAACpD,UAAU,KAAK0D,SAAS,EAAE;UAC/BV,IAAI,CAACF,KAAK,CAACa,MAAM,GAAG,cAAcP,EAAE,CAACpD,UAAU,GAAG;QACpD;MACF;IACF,CAAC,CAAC,OAAO4D,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA3E,SAAS,CAAC,MAAM;IACd,MAAM6E,kBAAkB,GAAGA,CAAA,KAAM;MAC/B,IAAI;QACF;QACA,MAAMC,aAAa,GAAG3E,cAAc,CAAC,mBAAmB,EAAE,IAAI,CAAC;QAE/D,IAAI2E,aAAa,EAAE;UAAA,IAAAC,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA,EAAAC,sBAAA;UACjB;UACA,MAAMC,cAAc,GAAG;YACrB,GAAG9E,eAAe;YAClB,GAAGuE,aAAa;YAChB;YACArE,aAAa,EAAE;cACb,GAAGF,eAAe,CAACE,aAAa;cAChC,IAAIqE,aAAa,CAACrE,aAAa,IAAI,CAAC,CAAC;YACvC,CAAC;YACDG,UAAU,EAAE;cACV,GAAGL,eAAe,CAACK,UAAU;cAC7B,IAAIkE,aAAa,CAAClE,UAAU,IAAI,CAAC,CAAC;YACpC,CAAC;YACDQ,MAAM,EAAE;cACN,GAAGb,eAAe,CAACa,MAAM;cACzB,IAAI0D,aAAa,CAAC1D,MAAM,IAAI,CAAC,CAAC;YAChC,CAAC;YACDM,OAAO,EAAE;cACP,GAAGnB,eAAe,CAACmB,OAAO;cAC1B,IAAIoD,aAAa,CAACpD,OAAO,IAAI,CAAC,CAAC,CAAC;cAChCC,QAAQ,EAAE;gBACR,GAAGpB,eAAe,CAACmB,OAAO,CAACC,QAAQ;gBACnC,IAAI,EAAAoD,qBAAA,GAAAD,aAAa,CAACpD,OAAO,cAAAqD,qBAAA,uBAArBA,qBAAA,CAAuBpD,QAAQ,KAAI,CAAC,CAAC;cAC3C,CAAC;cACDG,QAAQ,EAAE;gBACR,GAAGvB,eAAe,CAACmB,OAAO,CAACI,QAAQ;gBACnC,IAAI,EAAAkD,sBAAA,GAAAF,aAAa,CAACpD,OAAO,cAAAsD,sBAAA,uBAArBA,sBAAA,CAAuBlD,QAAQ,KAAI,CAAC,CAAC;cAC3C,CAAC;cACDG,IAAI,EAAE;gBACJ,GAAG1B,eAAe,CAACmB,OAAO,CAACO,IAAI;gBAC/B,IAAI,EAAAgD,sBAAA,GAAAH,aAAa,CAACpD,OAAO,cAAAuD,sBAAA,uBAArBA,sBAAA,CAAuBhD,IAAI,KAAI,CAAC,CAAC;cACvC,CAAC;cACDG,IAAI,EAAE;gBACJ,GAAG7B,eAAe,CAACmB,OAAO,CAACU,IAAI;gBAC/B,IAAI,EAAA8C,sBAAA,GAAAJ,aAAa,CAACpD,OAAO,cAAAwD,sBAAA,uBAArBA,sBAAA,CAAuB9C,IAAI,KAAI,CAAC,CAAC;cACvC,CAAC;cACDG,KAAK,EAAE;gBACL,GAAGhC,eAAe,CAACmB,OAAO,CAACa,KAAK;gBAChC,IAAI,EAAA4C,sBAAA,GAAAL,aAAa,CAACpD,OAAO,cAAAyD,sBAAA,uBAArBA,sBAAA,CAAuB5C,KAAK,KAAI,CAAC,CAAC;cACxC,CAAC;cACDG,IAAI,EAAE;gBACJ,GAAGnC,eAAe,CAACmB,OAAO,CAACgB,IAAI;gBAC/B,IAAI,EAAA0C,sBAAA,GAAAN,aAAa,CAACpD,OAAO,cAAA0D,sBAAA,uBAArBA,sBAAA,CAAuB1C,IAAI,KAAI,CAAC,CAAC;cACvC;YACF;UACF,CAAC;UAEDW,WAAW,CAACgC,cAAc,CAAC;UAC3B9B,aAAa,CAAC8B,cAAc,CAAC;QAC/B,CAAC,MAAM;UACL;UACAhC,WAAW,CAAC9C,eAAe,CAAC;UAC5BgD,aAAa,CAAChD,eAAe,CAAC;UAC9B;UACAH,aAAa,CAAC,mBAAmB,EAAEG,eAAe,CAAC;QACrD;MACF,CAAC,CAAC,OAAOoE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,WAAW,EAAEA,KAAK,CAAC;QACjC;QACAtB,WAAW,CAAC9C,eAAe,CAAC;QAC5BgD,aAAa,CAAChD,eAAe,CAAC;MAChC,CAAC,SAAS;QACR+C,WAAW,CAAC,IAAI,CAAC;MACnB;IACF,CAAC;;IAED;IACA,MAAMgC,KAAK,GAAGC,UAAU,CAACV,kBAAkB,EAAE,GAAG,CAAC;IACjD,OAAO,MAAMW,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAAC/B,aAAa,CAAC,CAAC;;EAEnB;EACA,MAAMR,cAAc,GAAG9C,WAAW,CAAEwF,WAAW,IAAK;IAClD,IAAI;MACF,MAAMC,eAAe,GAAG;QACtB,GAAG7C,QAAQ;QACX,GAAG4C;MACL,CAAC;MAEDpC,WAAW,CAACqC,eAAe,CAAC;MAC5BnC,aAAa,CAACmC,eAAe,CAAC;MAC9BtF,aAAa,CAAC,mBAAmB,EAAEsF,eAAe,CAAC;IACrD,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC9B,QAAQ,EAAEU,aAAa,CAAC,CAAC;;EAE7B;EACA,MAAMP,sBAAsB,GAAG/C,WAAW,CAAC,CAAC0F,IAAI,EAAE9E,KAAK,KAAK;IAC1D,IAAI;MACF,MAAM+E,SAAS,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;MACjC,MAAMH,eAAe,GAAG;QAAE,GAAG7C;MAAS,CAAC;;MAEvC;MACA,IAAIiD,OAAO,GAAGJ,eAAe;MAC7B,KAAK,IAAIK,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACI,MAAM,GAAG,CAAC,EAAED,CAAC,EAAE,EAAE;QAC7C,MAAME,GAAG,GAAGL,SAAS,CAACG,CAAC,CAAC;QACxB,IAAI,CAACD,OAAO,CAACG,GAAG,CAAC,IAAI,OAAOH,OAAO,CAACG,GAAG,CAAC,KAAK,QAAQ,EAAE;UACrDH,OAAO,CAACG,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,MAAM;UACLH,OAAO,CAACG,GAAG,CAAC,GAAG;YAAE,GAAGH,OAAO,CAACG,GAAG;UAAE,CAAC;QACpC;QACAH,OAAO,GAAGA,OAAO,CAACG,GAAG,CAAC;MACxB;MACAH,OAAO,CAACF,SAAS,CAACA,SAAS,CAACI,MAAM,GAAG,CAAC,CAAC,CAAC,GAAGnF,KAAK;MAEhDwC,WAAW,CAACqC,eAAe,CAAC;MAC5BnC,aAAa,CAACmC,eAAe,CAAC;MAC9BtF,aAAa,CAAC,mBAAmB,EAAEsF,eAAe,CAAC;IACrD,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,YAAY,EAAEA,KAAK,CAAC;IACpC;EACF,CAAC,EAAE,CAAC9B,QAAQ,EAAEU,aAAa,CAAC,CAAC;;EAE7B;EACA,MAAMN,aAAa,GAAGhD,WAAW,CAAC,MAAM;IACtC,IAAI;MACFoD,WAAW,CAAC9C,eAAe,CAAC;MAC5BgD,aAAa,CAAChD,eAAe,CAAC;MAC9BH,aAAa,CAAC,mBAAmB,EAAEG,eAAe,CAAC;IACrD,CAAC,CAAC,OAAOoE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,UAAU,EAAEA,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAACpB,aAAa,CAAC,CAAC;EAEnB,MAAM2C,YAAY,GAAG;IACnBrD,QAAQ;IACRC,QAAQ;IACRC,cAAc;IACdC,sBAAsB;IACtBC;EACF,CAAC;EAED,oBACE3C,OAAA,CAACsC,eAAe,CAACuD,QAAQ;IAACtF,KAAK,EAAEqF,YAAa;IAAA/C,QAAA,EAC3CA;EAAQ;IAAAiD,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACe,CAAC;AAE/B,CAAC;;AAED;AAAAnD,EAAA,CA5NaF,gBAAgB;AAAAsD,EAAA,GAAhBtD,gBAAgB;AA6N7B,OAAO,MAAMuD,WAAW,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC/B,MAAMC,OAAO,GAAGzG,UAAU,CAAC0C,eAAe,CAAC;EAC3C,IAAI,CAAC+D,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,GAAA,CANWD,WAAW;AAQxB,eAAe7D,eAAe;AAAC,IAAA4D,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}