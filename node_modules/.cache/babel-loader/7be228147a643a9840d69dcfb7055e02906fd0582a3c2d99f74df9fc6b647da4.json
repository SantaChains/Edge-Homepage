{"ast":null,"code":"var _jsxFileName = \"D:\\\\Jliu Pureey\\\\Documents\\\\Editor\\\\extion\\\\homepage\\\\src\\\\modules\\\\Bookmark\\\\Bookmark.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { saveToStorage, getFromStorage } from '../../utils/storage';\nimport { handleUrlChange } from '../../utils/urlHandler';\n\n// 组件导入\nimport BookmarkItem from './components/BookmarkItem';\nimport FolderItem from './components/FolderItem';\nimport BookmarkModal from './components/BookmarkModal';\nimport FolderModal from './components/FolderModal';\n\n// 图标导入\nimport AddIcon from '@mui/icons-material/Add';\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookmarkContainer = styled.div`\n  width: 100%;\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n`;\n_c = BookmarkContainer;\nconst BookmarkHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n_c2 = BookmarkHeader;\nconst BookmarkTitle = styled.h2`\n  margin: 0;\n  font-size: 24px;\n  font-weight: 500;\n`;\n_c3 = BookmarkTitle;\nconst ActionButtons = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n_c4 = ActionButtons;\nconst ActionButton = styled.button`\n  background-color: var(--primary-color);\n  color: white;\n  border: none;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  \n  &:hover {\n    background-color: #3a7bc8;\n  }\n`;\n_c5 = ActionButton;\nconst BookmarkGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\n  gap: 20px;\n`;\n_c6 = BookmarkGrid;\nconst FolderContent = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 1px solid var(--border-color);\n`;\n_c7 = FolderContent;\nconst FolderHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n`;\n_c8 = FolderHeader;\nconst FolderTitle = styled.h3`\n  margin: 0;\n  font-size: 18px;\n  font-weight: 500;\n  display: flex;\n  align-items: center;\n  gap: 5px;\n`;\n_c9 = FolderTitle;\nconst EmptyState = styled.div`\n  text-align: center;\n  padding: 40px 20px;\n  color: var(--text-color);\n  opacity: 0.7;\n`;\n_c0 = EmptyState;\nconst Bookmark = () => {\n  _s();\n  // 状态\n  const [bookmarks, setBookmarks] = useState([]);\n  const [folders, setFolders] = useState([]);\n  const [showBookmarkModal, setShowBookmarkModal] = useState(false);\n  const [showFolderModal, setShowFolderModal] = useState(false);\n  const [modalMode, setModalMode] = useState('add'); // add, edit\n  const [currentFolder, setCurrentFolder] = useState(null);\n  const [editingItem, setEditingItem] = useState(null);\n\n  // 初始化数据\n  useEffect(() => {\n    const savedBookmarks = getFromStorage('homepage-bookmarks', []);\n    const savedFolders = getFromStorage('homepage-bookmark-folders', []);\n    setBookmarks(savedBookmarks);\n    setFolders(savedFolders);\n  }, []);\n\n  // 打开添加书签模态框\n  const openAddBookmarkModal = () => {\n    setModalMode('add');\n    setEditingItem(null);\n    setShowBookmarkModal(true);\n  };\n\n  // 打开编辑书签模态框\n  const openEditBookmarkModal = bookmark => {\n    setModalMode('edit');\n    setEditingItem(bookmark);\n    setShowBookmarkModal(true);\n  };\n\n  // 打开添加文件夹模态框\n  const openAddFolderModal = () => {\n    setModalMode('add');\n    setEditingItem(null);\n    setShowFolderModal(true);\n  };\n\n  // 打开编辑文件夹模态框\n  const openEditFolderModal = folder => {\n    setModalMode('edit');\n    setEditingItem(folder);\n    setShowFolderModal(true);\n  };\n\n  // 关闭模态框\n  const closeBookmarkModal = () => {\n    setShowBookmarkModal(false);\n  };\n  const closeFolderModal = () => {\n    setShowFolderModal(false);\n  };\n\n  // 保存书签\n  const saveBookmark = formData => {\n    // 处理URL格式\n    const processedUrl = handleUrlChange(formData.url);\n    const newBookmark = {\n      id: editingItem ? editingItem.id : Date.now(),\n      name: formData.name,\n      url: processedUrl || formData.url,\n      icon: formData.icon,\n      folderId: formData.folderId\n    };\n    let updatedBookmarks;\n    if (modalMode === 'edit') {\n      // 编辑现有书签\n      updatedBookmarks = bookmarks.map(item => item.id === editingItem.id ? newBookmark : item);\n    } else {\n      // 添加新书签\n      updatedBookmarks = [...bookmarks, newBookmark];\n    }\n    setBookmarks(updatedBookmarks);\n    saveToStorage('homepage-bookmarks', updatedBookmarks);\n    closeBookmarkModal();\n  };\n\n  // 保存文件夹\n  const saveFolder = formData => {\n    const newFolder = {\n      id: editingItem ? editingItem.id : Date.now(),\n      name: formData.name\n    };\n    let updatedFolders;\n    if (modalMode === 'edit') {\n      // 编辑现有文件夹\n      updatedFolders = folders.map(item => item.id === editingItem.id ? newFolder : item);\n    } else {\n      // 添加新文件夹\n      updatedFolders = [...folders, newFolder];\n    }\n    setFolders(updatedFolders);\n    saveToStorage('homepage-bookmark-folders', updatedFolders);\n    closeFolderModal();\n  };\n\n  // 删除书签\n  const deleteBookmark = id => {\n    if (window.confirm('确定要删除这个书签吗？')) {\n      const updatedBookmarks = bookmarks.filter(item => item.id !== id);\n      setBookmarks(updatedBookmarks);\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\n    }\n  };\n\n  // 删除文件夹\n  const deleteFolder = id => {\n    if (window.confirm('删除文件夹将会把文件夹内的书签移动到根目录，确定要删除吗？')) {\n      // 更新书签，将该文件夹内的书签移动到根目录\n      const updatedBookmarks = bookmarks.map(bookmark => {\n        if (bookmark.folderId === id) {\n          return {\n            ...bookmark,\n            folderId: null\n          };\n        }\n        return bookmark;\n      });\n      const updatedFolders = folders.filter(folder => folder.id !== id);\n      setBookmarks(updatedBookmarks);\n      setFolders(updatedFolders);\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\n      saveToStorage('homepage-bookmark-folders', updatedFolders);\n\n      // 如果当前正在查看被删除的文件夹，则返回根目录\n      if (currentFolder === id) {\n        setCurrentFolder(null);\n      }\n    }\n  };\n\n  // 打开书签链接\n  const openBookmark = url => {\n    window.open(url, '_blank');\n  };\n\n  // 切换文件夹\n  const toggleFolder = folderId => {\n    setCurrentFolder(currentFolder === folderId ? null : folderId);\n  };\n\n  // 处理拖放结束\n  const handleDragEnd = result => {\n    const {\n      destination,\n      source,\n      draggableId,\n      type\n    } = result;\n\n    // 如果没有目标位置或者位置没有变化，不做任何处理\n    if (!destination || destination.droppableId === source.droppableId && destination.index === source.index) {\n      return;\n    }\n    if (type === 'bookmark') {\n      // 处理书签拖放\n      const bookmarkId = parseInt(draggableId.replace('bookmark-', ''));\n      const bookmark = bookmarks.find(b => b.id === bookmarkId);\n      if (!bookmark) return;\n\n      // 更新书签的文件夹ID\n      const targetFolderId = destination.droppableId === 'root' ? null : parseInt(destination.droppableId.replace('folder-', ''));\n      const updatedBookmarks = bookmarks.map(b => {\n        if (b.id === bookmarkId) {\n          return {\n            ...b,\n            folderId: targetFolderId\n          };\n        }\n        return b;\n      });\n      setBookmarks(updatedBookmarks);\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\n    }\n  };\n\n  // 过滤根目录书签（不在任何文件夹中）\n  const rootBookmarks = bookmarks.filter(bookmark => !bookmark.folderId);\n\n  // 获取当前文件夹中的书签\n  const folderBookmarks = bookmarks.filter(bookmark => bookmark.folderId === currentFolder);\n\n  // 获取当前文件夹信息\n  const currentFolderInfo = folders.find(folder => folder.id === currentFolder);\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(BookmarkContainer, {\n      children: [/*#__PURE__*/_jsxDEV(BookmarkHeader, {\n        children: [/*#__PURE__*/_jsxDEV(BookmarkTitle, {\n          children: \"\\u4E66\\u7B7E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ActionButtons, {\n          children: [/*#__PURE__*/_jsxDEV(ActionButton, {\n            onClick: openAddFolderModal,\n            title: \"\\u6DFB\\u52A0\\u6587\\u4EF6\\u5939\",\n            children: /*#__PURE__*/_jsxDEV(CreateNewFolderIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ActionButton, {\n            onClick: openAddBookmarkModal,\n            title: \"\\u6DFB\\u52A0\\u4E66\\u7B7E\",\n            children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: \"root\",\n        type: \"bookmark\",\n        children: provided => /*#__PURE__*/_jsxDEV(BookmarkGrid, {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          children: [rootBookmarks.map((bookmark, index) => /*#__PURE__*/_jsxDEV(BookmarkItem, {\n            bookmark: bookmark,\n            index: index,\n            onEdit: openEditBookmarkModal,\n            onDelete: deleteBookmark,\n            onClick: openBookmark\n          }, bookmark.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this)), folders.map(folder => /*#__PURE__*/_jsxDEV(FolderItem, {\n            folder: folder,\n            isActive: currentFolder === folder.id,\n            onToggle: toggleFolder,\n            onEdit: openEditFolderModal,\n            onDelete: deleteFolder\n          }, folder.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this)), provided.placeholder, rootBookmarks.length === 0 && folders.length === 0 && /*#__PURE__*/_jsxDEV(EmptyState, {\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"\\u6682\\u65E0\\u4E66\\u7B7E\\uFF0C\\u70B9\\u51FB\\u53F3\\u4E0A\\u89D2\\u6DFB\\u52A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 9\n      }, this), currentFolder && currentFolderInfo && /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: `folder-${currentFolder}`,\n        type: \"bookmark\",\n        children: provided => /*#__PURE__*/_jsxDEV(FolderContent, {\n          children: [/*#__PURE__*/_jsxDEV(FolderHeader, {\n            children: /*#__PURE__*/_jsxDEV(FolderTitle, {\n              children: currentFolderInfo.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BookmarkGrid, {\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [folderBookmarks.map((bookmark, index) => /*#__PURE__*/_jsxDEV(BookmarkItem, {\n              bookmark: bookmark,\n              index: index,\n              onEdit: openEditBookmarkModal,\n              onDelete: deleteBookmark,\n              onClick: openBookmark\n            }, bookmark.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 21\n            }, this)), provided.placeholder, folderBookmarks.length === 0 && /*#__PURE__*/_jsxDEV(EmptyState, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"\\u6587\\u4EF6\\u5939\\u4E3A\\u7A7A\\uFF0C\\u62D6\\u52A8\\u4E66\\u7B7E\\u5230\\u6B64\\u5904\\u6216\\u70B9\\u51FB\\u53F3\\u4E0A\\u89D2\\u6DFB\\u52A0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(BookmarkModal, {\n        isOpen: showBookmarkModal,\n        onClose: closeBookmarkModal,\n        onSave: saveBookmark,\n        bookmark: editingItem,\n        folders: folders\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FolderModal, {\n        isOpen: showFolderModal,\n        onClose: closeFolderModal,\n        onSave: saveFolder,\n        folder: editingItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n};\n_s(Bookmark, \"p0NB9RQl/sc1tbRxW8jCwfejgmc=\");\n_c1 = Bookmark;\nexport default Bookmark;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1;\n$RefreshReg$(_c, \"BookmarkContainer\");\n$RefreshReg$(_c2, \"BookmarkHeader\");\n$RefreshReg$(_c3, \"BookmarkTitle\");\n$RefreshReg$(_c4, \"ActionButtons\");\n$RefreshReg$(_c5, \"ActionButton\");\n$RefreshReg$(_c6, \"BookmarkGrid\");\n$RefreshReg$(_c7, \"FolderContent\");\n$RefreshReg$(_c8, \"FolderHeader\");\n$RefreshReg$(_c9, \"FolderTitle\");\n$RefreshReg$(_c0, \"EmptyState\");\n$RefreshReg$(_c1, \"Bookmark\");","map":{"version":3,"names":["React","useState","useEffect","styled","DragDropContext","Droppable","saveToStorage","getFromStorage","handleUrlChange","BookmarkItem","FolderItem","BookmarkModal","FolderModal","AddIcon","CreateNewFolderIcon","jsxDEV","_jsxDEV","BookmarkContainer","div","_c","BookmarkHeader","_c2","BookmarkTitle","h2","_c3","ActionButtons","_c4","ActionButton","button","_c5","BookmarkGrid","_c6","FolderContent","_c7","FolderHeader","_c8","FolderTitle","h3","_c9","EmptyState","_c0","Bookmark","_s","bookmarks","setBookmarks","folders","setFolders","showBookmarkModal","setShowBookmarkModal","showFolderModal","setShowFolderModal","modalMode","setModalMode","currentFolder","setCurrentFolder","editingItem","setEditingItem","savedBookmarks","savedFolders","openAddBookmarkModal","openEditBookmarkModal","bookmark","openAddFolderModal","openEditFolderModal","folder","closeBookmarkModal","closeFolderModal","saveBookmark","formData","processedUrl","url","newBookmark","id","Date","now","name","icon","folderId","updatedBookmarks","map","item","saveFolder","newFolder","updatedFolders","deleteBookmark","window","confirm","filter","deleteFolder","openBookmark","open","toggleFolder","handleDragEnd","result","destination","source","draggableId","type","droppableId","index","bookmarkId","parseInt","replace","find","b","targetFolderId","rootBookmarks","folderBookmarks","currentFolderInfo","onDragEnd","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","provided","ref","innerRef","droppableProps","onEdit","onDelete","isActive","onToggle","placeholder","length","isOpen","onClose","onSave","_c1","$RefreshReg$"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/modules/Bookmark/Bookmark.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\r\nimport { saveToStorage, getFromStorage } from '../../utils/storage';\r\nimport { handleUrlChange } from '../../utils/urlHandler';\r\n\r\n// 组件导入\r\nimport BookmarkItem from './components/BookmarkItem';\r\nimport FolderItem from './components/FolderItem';\r\nimport BookmarkModal from './components/BookmarkModal';\r\nimport FolderModal from './components/FolderModal';\r\n\r\n// 图标导入\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\n\r\nconst BookmarkContainer = styled.div`\r\n  width: 100%;\r\n  max-width: 800px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n`;\r\n\r\nconst BookmarkHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst BookmarkTitle = styled.h2`\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: 500;\r\n`;\r\n\r\nconst ActionButtons = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst ActionButton = styled.button`\r\n  background-color: var(--primary-color);\r\n  color: white;\r\n  border: none;\r\n  border-radius: 50%;\r\n  width: 36px;\r\n  height: 36px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  \r\n  &:hover {\r\n    background-color: #3a7bc8;\r\n  }\r\n`;\r\n\r\nconst BookmarkGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n  gap: 20px;\r\n`;\r\n\r\nconst FolderContent = styled.div`\r\n  margin-top: 20px;\r\n  padding-top: 20px;\r\n  border-top: 1px solid var(--border-color);\r\n`;\r\n\r\nconst FolderHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nconst FolderTitle = styled.h3`\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n`;\r\n\r\nconst EmptyState = styled.div`\r\n  text-align: center;\r\n  padding: 40px 20px;\r\n  color: var(--text-color);\r\n  opacity: 0.7;\r\n`;\r\n\r\nconst Bookmark = () => {\r\n  // 状态\r\n  const [bookmarks, setBookmarks] = useState([]);\r\n  const [folders, setFolders] = useState([]);\r\n  const [showBookmarkModal, setShowBookmarkModal] = useState(false);\r\n  const [showFolderModal, setShowFolderModal] = useState(false);\r\n  const [modalMode, setModalMode] = useState('add'); // add, edit\r\n  const [currentFolder, setCurrentFolder] = useState(null);\r\n  const [editingItem, setEditingItem] = useState(null);\r\n  \r\n  // 初始化数据\r\n  useEffect(() => {\r\n    const savedBookmarks = getFromStorage('homepage-bookmarks', []);\r\n    const savedFolders = getFromStorage('homepage-bookmark-folders', []);\r\n    setBookmarks(savedBookmarks);\r\n    setFolders(savedFolders);\r\n  }, []);\r\n  \r\n  // 打开添加书签模态框\r\n  const openAddBookmarkModal = () => {\r\n    setModalMode('add');\r\n    setEditingItem(null);\r\n    setShowBookmarkModal(true);\r\n  };\r\n  \r\n  // 打开编辑书签模态框\r\n  const openEditBookmarkModal = (bookmark) => {\r\n    setModalMode('edit');\r\n    setEditingItem(bookmark);\r\n    setShowBookmarkModal(true);\r\n  };\r\n  \r\n  // 打开添加文件夹模态框\r\n  const openAddFolderModal = () => {\r\n    setModalMode('add');\r\n    setEditingItem(null);\r\n    setShowFolderModal(true);\r\n  };\r\n  \r\n  // 打开编辑文件夹模态框\r\n  const openEditFolderModal = (folder) => {\r\n    setModalMode('edit');\r\n    setEditingItem(folder);\r\n    setShowFolderModal(true);\r\n  };\r\n  \r\n  // 关闭模态框\r\n  const closeBookmarkModal = () => {\r\n    setShowBookmarkModal(false);\r\n  };\r\n  \r\n  const closeFolderModal = () => {\r\n    setShowFolderModal(false);\r\n  };\r\n  \r\n  // 保存书签\r\n  const saveBookmark = (formData) => {\r\n    // 处理URL格式\r\n    const processedUrl = handleUrlChange(formData.url);\r\n    \r\n    const newBookmark = {\r\n      id: editingItem ? editingItem.id : Date.now(),\r\n      name: formData.name,\r\n      url: processedUrl || formData.url,\r\n      icon: formData.icon,\r\n      folderId: formData.folderId\r\n    };\r\n    \r\n    let updatedBookmarks;\r\n    \r\n    if (modalMode === 'edit') {\r\n      // 编辑现有书签\r\n      updatedBookmarks = bookmarks.map(item => \r\n        item.id === editingItem.id ? newBookmark : item\r\n      );\r\n    } else {\r\n      // 添加新书签\r\n      updatedBookmarks = [...bookmarks, newBookmark];\r\n    }\r\n    \r\n    setBookmarks(updatedBookmarks);\r\n    saveToStorage('homepage-bookmarks', updatedBookmarks);\r\n    closeBookmarkModal();\r\n  };\r\n  \r\n  // 保存文件夹\r\n  const saveFolder = (formData) => {\r\n    const newFolder = {\r\n      id: editingItem ? editingItem.id : Date.now(),\r\n      name: formData.name\r\n    };\r\n    \r\n    let updatedFolders;\r\n    \r\n    if (modalMode === 'edit') {\r\n      // 编辑现有文件夹\r\n      updatedFolders = folders.map(item => \r\n        item.id === editingItem.id ? newFolder : item\r\n      );\r\n    } else {\r\n      // 添加新文件夹\r\n      updatedFolders = [...folders, newFolder];\r\n    }\r\n    \r\n    setFolders(updatedFolders);\r\n    saveToStorage('homepage-bookmark-folders', updatedFolders);\r\n    closeFolderModal();\r\n  };\r\n  \r\n  // 删除书签\r\n  const deleteBookmark = (id) => {\r\n    if (window.confirm('确定要删除这个书签吗？')) {\r\n      const updatedBookmarks = bookmarks.filter(item => item.id !== id);\r\n      setBookmarks(updatedBookmarks);\r\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\r\n    }\r\n  };\r\n  \r\n  // 删除文件夹\r\n  const deleteFolder = (id) => {\r\n    if (window.confirm('删除文件夹将会把文件夹内的书签移动到根目录，确定要删除吗？')) {\r\n      // 更新书签，将该文件夹内的书签移动到根目录\r\n      const updatedBookmarks = bookmarks.map(bookmark => {\r\n        if (bookmark.folderId === id) {\r\n          return { ...bookmark, folderId: null };\r\n        }\r\n        return bookmark;\r\n      });\r\n      \r\n      const updatedFolders = folders.filter(folder => folder.id !== id);\r\n      \r\n      setBookmarks(updatedBookmarks);\r\n      setFolders(updatedFolders);\r\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\r\n      saveToStorage('homepage-bookmark-folders', updatedFolders);\r\n      \r\n      // 如果当前正在查看被删除的文件夹，则返回根目录\r\n      if (currentFolder === id) {\r\n        setCurrentFolder(null);\r\n      }\r\n    }\r\n  };\r\n  \r\n  // 打开书签链接\r\n  const openBookmark = (url) => {\r\n    window.open(url, '_blank');\r\n  };\r\n  \r\n  // 切换文件夹\r\n  const toggleFolder = (folderId) => {\r\n    setCurrentFolder(currentFolder === folderId ? null : folderId);\r\n  };\r\n  \r\n  // 处理拖放结束\r\n  const handleDragEnd = (result) => {\r\n    const { destination, source, draggableId, type } = result;\r\n    \r\n    // 如果没有目标位置或者位置没有变化，不做任何处理\r\n    if (!destination || (destination.droppableId === source.droppableId && destination.index === source.index)) {\r\n      return;\r\n    }\r\n    \r\n    if (type === 'bookmark') {\r\n      // 处理书签拖放\r\n      const bookmarkId = parseInt(draggableId.replace('bookmark-', ''));\r\n      const bookmark = bookmarks.find(b => b.id === bookmarkId);\r\n      \r\n      if (!bookmark) return;\r\n      \r\n      // 更新书签的文件夹ID\r\n      const targetFolderId = destination.droppableId === 'root' ? null : parseInt(destination.droppableId.replace('folder-', ''));\r\n      \r\n      const updatedBookmarks = bookmarks.map(b => {\r\n        if (b.id === bookmarkId) {\r\n          return { ...b, folderId: targetFolderId };\r\n        }\r\n        return b;\r\n      });\r\n      \r\n      setBookmarks(updatedBookmarks);\r\n      saveToStorage('homepage-bookmarks', updatedBookmarks);\r\n    }\r\n  };\r\n  \r\n  // 过滤根目录书签（不在任何文件夹中）\r\n  const rootBookmarks = bookmarks.filter(bookmark => !bookmark.folderId);\r\n  \r\n  // 获取当前文件夹中的书签\r\n  const folderBookmarks = bookmarks.filter(bookmark => bookmark.folderId === currentFolder);\r\n  \r\n  // 获取当前文件夹信息\r\n  const currentFolderInfo = folders.find(folder => folder.id === currentFolder);\r\n  \r\n  return (\r\n    <DragDropContext onDragEnd={handleDragEnd}>\r\n      <BookmarkContainer>\r\n        <BookmarkHeader>\r\n          <BookmarkTitle>书签</BookmarkTitle>\r\n          <ActionButtons>\r\n            <ActionButton onClick={openAddFolderModal} title=\"添加文件夹\">\r\n              <CreateNewFolderIcon />\r\n            </ActionButton>\r\n            <ActionButton onClick={openAddBookmarkModal} title=\"添加书签\">\r\n              <AddIcon />\r\n            </ActionButton>\r\n          </ActionButtons>\r\n        </BookmarkHeader>\r\n        \r\n        {/* 根目录书签和文件夹 */}\r\n        <Droppable droppableId=\"root\" type=\"bookmark\">\r\n          {(provided) => (\r\n            <BookmarkGrid ref={provided.innerRef} {...provided.droppableProps}>\r\n              {rootBookmarks.map((bookmark, index) => (\r\n                <BookmarkItem \r\n                  key={bookmark.id}\r\n                  bookmark={bookmark}\r\n                  index={index}\r\n                  onEdit={openEditBookmarkModal}\r\n                  onDelete={deleteBookmark}\r\n                  onClick={openBookmark}\r\n                />\r\n              ))}\r\n              \r\n              {folders.map((folder) => (\r\n                <FolderItem \r\n                  key={folder.id}\r\n                  folder={folder}\r\n                  isActive={currentFolder === folder.id}\r\n                  onToggle={toggleFolder}\r\n                  onEdit={openEditFolderModal}\r\n                  onDelete={deleteFolder}\r\n                />\r\n              ))}\r\n              \r\n              {provided.placeholder}\r\n              \r\n              {rootBookmarks.length === 0 && folders.length === 0 && (\r\n                <EmptyState>\r\n                  <p>暂无书签，点击右上角添加</p>\r\n                </EmptyState>\r\n              )}\r\n            </BookmarkGrid>\r\n          )}\r\n        </Droppable>\r\n        \r\n        {/* 文件夹内容 */}\r\n        {currentFolder && currentFolderInfo && (\r\n          <Droppable droppableId={`folder-${currentFolder}`} type=\"bookmark\">\r\n            {(provided) => (\r\n              <FolderContent>\r\n                <FolderHeader>\r\n                  <FolderTitle>\r\n                    {currentFolderInfo.name}\r\n                  </FolderTitle>\r\n                </FolderHeader>\r\n                \r\n                <BookmarkGrid ref={provided.innerRef} {...provided.droppableProps}>\r\n                  {folderBookmarks.map((bookmark, index) => (\r\n                    <BookmarkItem \r\n                      key={bookmark.id}\r\n                      bookmark={bookmark}\r\n                      index={index}\r\n                      onEdit={openEditBookmarkModal}\r\n                      onDelete={deleteBookmark}\r\n                      onClick={openBookmark}\r\n                    />\r\n                  ))}\r\n                  \r\n                  {provided.placeholder}\r\n                  \r\n                  {folderBookmarks.length === 0 && (\r\n                    <EmptyState>\r\n                      <p>文件夹为空，拖动书签到此处或点击右上角添加</p>\r\n                    </EmptyState>\r\n                  )}\r\n                </BookmarkGrid>\r\n              </FolderContent>\r\n            )}\r\n          </Droppable>\r\n        )}\r\n        \r\n        {/* 模态框 */}\r\n        <BookmarkModal \r\n          isOpen={showBookmarkModal}\r\n          onClose={closeBookmarkModal}\r\n          onSave={saveBookmark}\r\n          bookmark={editingItem}\r\n          folders={folders}\r\n        />\r\n        \r\n        <FolderModal \r\n          isOpen={showFolderModal}\r\n          onClose={closeFolderModal}\r\n          onSave={saveFolder}\r\n          folder={editingItem}\r\n        />\r\n      </BookmarkContainer>\r\n    </DragDropContext>\r\n  );\r\n};\r\n\r\nexport default Bookmark;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}