{"ast":null,"code":"/**\r\n * 简化的配置管理器 - 使用localStorage和config.json的混合方案\r\n */// 默认配置\nconst DEFAULT_CONFIG={version:\"1.0.0\",lastUpdated:new Date().toISOString(),settings:{theme:'light',backgroundType:'color',backgroundColor:'#ffffff',backgroundImage:'',backgroundOpacity:1,backgroundBrightness:1,backgroundBlur:0,backgroundFit:'cover',textColor:'#000000',linkColor:'#4a90e2',fontFamily:'Arial, sans-serif',gradientType:'linear',gradientDirection:'to right',gradientColors:['#4a90e2','#9b59b6'],gradientStops:[0,100],showBackground:true,startupModuleType:'last',startupModule:'quote'},data:{lastActiveModule:'quote',bookmarks:[],todos:[],notes:[],calendar:{events:[],countdowns:[]}}};class SimpleConfigManager{constructor(){this.config=null;this.isInitialized=false;}/**\r\n   * 初始化配置管理器\r\n   */async initialize(){try{// 尝试从localStorage加载现有配置\nconst savedConfig=this.getFromLocalStorage('homepage-config',null);if(savedConfig){this.config=this.mergeWithDefaults(savedConfig);}else{// 迁移旧数据\nawait this.migrateFromOldStorage();}this.isInitialized=true;console.log('简化配置管理器初始化成功');}catch(error){console.error('配置管理器初始化失败:',error);this.config={...DEFAULT_CONFIG};this.isInitialized=true;}}/**\r\n   * 从旧存储迁移数据\r\n   */async migrateFromOldStorage(){const migratedConfig={...DEFAULT_CONFIG};// 迁移设置\nconst oldSettings=this.getFromLocalStorage('homepage-settings',{});if(Object.keys(oldSettings).length>0){migratedConfig.settings={...migratedConfig.settings,...oldSettings};}// 迁移数据\nmigratedConfig.data.lastActiveModule=this.getFromLocalStorage('last-active-module','quote');migratedConfig.data.bookmarks=this.getFromLocalStorage('homepage-bookmarks',[]);migratedConfig.data.todos=this.getFromLocalStorage('homepage-todos',[]);migratedConfig.data.notes=this.getFromLocalStorage('homepage-notes',[]);const calendarData=this.getFromLocalStorage('homepage-calendar',{});if(calendarData.events)migratedConfig.data.calendar.events=calendarData.events;if(calendarData.countdowns)migratedConfig.data.calendar.countdowns=calendarData.countdowns;this.config=migratedConfig;await this.saveConfig();console.log('数据迁移完成');}/**\r\n   * 合并配置与默认值\r\n   */mergeWithDefaults(config){const merged=JSON.parse(JSON.stringify(DEFAULT_CONFIG));const deepMerge=(target,source)=>{for(const key in source){if(source[key]&&typeof source[key]==='object'&&!Array.isArray(source[key])){if(!target[key])target[key]={};deepMerge(target[key],source[key]);}else{target[key]=source[key];}}};deepMerge(merged,config);merged.lastUpdated=new Date().toISOString();return merged;}/**\r\n   * 保存配置\r\n   */async saveConfig(){if(!this.config)return;try{this.config.lastUpdated=new Date().toISOString();// 保存到localStorage\nthis.saveToLocalStorage('homepage-config',this.config);console.log('配置保存成功');}catch(error){console.error('保存配置失败:',error);}}/**\r\n   * 获取配置值\r\n   */get(path){let defaultValue=arguments.length>1&&arguments[1]!==undefined?arguments[1]:null;if(!this.config)return defaultValue;const keys=path.split('.');let current=this.config;for(const key of keys){if(current&&typeof current==='object'&&key in current){current=current[key];}else{return defaultValue;}}return current;}/**\r\n   * 设置配置值\r\n   */async set(path,value){if(!this.config)await this.initialize();const keys=path.split('.');let current=this.config;// 导航到父级对象\nfor(let i=0;i<keys.length-1;i++){const key=keys[i];if(!current[key]||typeof current[key]!=='object'){current[key]={};}current=current[key];}// 设置值\nconst lastKey=keys[keys.length-1];current[lastKey]=value;// 保存配置\nawait this.saveConfig();}/**\r\n   * 导出配置为config.json\r\n   */exportConfig(){if(!this.config)return null;const configJson=JSON.stringify(this.config,null,2);const blob=new Blob([configJson],{type:'application/json'});const url=URL.createObjectURL(blob);const a=document.createElement('a');a.href=url;a.download='config.json';document.body.appendChild(a);a.click();document.body.removeChild(a);URL.revokeObjectURL(url);return configJson;}/**\r\n   * 导入配置\r\n   */async importConfig(file){try{const text=await file.text();const importedConfig=JSON.parse(text);// 验证配置格式\nif(!this.validateConfig(importedConfig)){throw new Error('配置文件格式无效');}this.config=this.mergeWithDefaults(importedConfig);await this.saveConfig();return true;}catch(error){console.error('导入配置失败:',error);throw error;}}/**\r\n   * 验证配置格式\r\n   */validateConfig(config){return config&&typeof config==='object'&&config.settings&&config.data;}/**\r\n   * 重置配置\r\n   */async resetConfig(){this.config={...DEFAULT_CONFIG};await this.saveConfig();console.log('配置已重置为默认值');}/**\r\n   * 获取配置统计信息\r\n   */getStats(){var _this$config$data$boo,_this$config$data$tod,_this$config$data$not,_this$config$data$cal,_this$config$data$cal2,_this$config$data$cal3,_this$config$data$cal4;if(!this.config)return null;return{version:this.config.version,lastUpdated:this.config.lastUpdated,dataSize:JSON.stringify(this.config).length,bookmarksCount:((_this$config$data$boo=this.config.data.bookmarks)===null||_this$config$data$boo===void 0?void 0:_this$config$data$boo.length)||0,todosCount:((_this$config$data$tod=this.config.data.todos)===null||_this$config$data$tod===void 0?void 0:_this$config$data$tod.length)||0,notesCount:((_this$config$data$not=this.config.data.notes)===null||_this$config$data$not===void 0?void 0:_this$config$data$not.length)||0,eventsCount:((_this$config$data$cal=this.config.data.calendar)===null||_this$config$data$cal===void 0?void 0:(_this$config$data$cal2=_this$config$data$cal.events)===null||_this$config$data$cal2===void 0?void 0:_this$config$data$cal2.length)||0,countdownsCount:((_this$config$data$cal3=this.config.data.calendar)===null||_this$config$data$cal3===void 0?void 0:(_this$config$data$cal4=_this$config$data$cal3.countdowns)===null||_this$config$data$cal4===void 0?void 0:_this$config$data$cal4.length)||0};}// 辅助方法\ngetFromLocalStorage(key,defaultValue){try{const item=localStorage.getItem(key);return item?JSON.parse(item):defaultValue;}catch{return defaultValue;}}saveToLocalStorage(key,value){try{localStorage.setItem(key,JSON.stringify(value));}catch(error){console.error('localStorage保存失败:',error);}}}// 创建全局实例\nconst simpleConfigManager=new SimpleConfigManager();export default simpleConfigManager;export{DEFAULT_CONFIG};","map":{"version":3,"names":["DEFAULT_CONFIG","version","lastUpdated","Date","toISOString","settings","theme","backgroundType","backgroundColor","backgroundImage","backgroundOpacity","backgroundBrightness","backgroundBlur","backgroundFit","textColor","linkColor","fontFamily","gradientType","gradientDirection","gradientColors","gradientStops","showBackground","startupModuleType","startupModule","data","lastActiveModule","bookmarks","todos","notes","calendar","events","countdowns","SimpleConfigManager","constructor","config","isInitialized","initialize","savedConfig","getFromLocalStorage","mergeWithDefaults","migrateFromOldStorage","console","log","error","migratedConfig","oldSettings","Object","keys","length","calendarData","saveConfig","merged","JSON","parse","stringify","deepMerge","target","source","key","Array","isArray","saveToLocalStorage","get","path","defaultValue","arguments","undefined","split","current","set","value","i","lastKey","exportConfig","configJson","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","importConfig","file","text","importedConfig","validateConfig","Error","resetConfig","getStats","_this$config$data$boo","_this$config$data$tod","_this$config$data$not","_this$config$data$cal","_this$config$data$cal2","_this$config$data$cal3","_this$config$data$cal4","dataSize","bookmarksCount","todosCount","notesCount","eventsCount","countdownsCount","item","localStorage","getItem","setItem","simpleConfigManager"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/utils/simpleConfigManager.js"],"sourcesContent":["/**\r\n * 简化的配置管理器 - 使用localStorage和config.json的混合方案\r\n */\r\n\r\n// 默认配置\r\nconst DEFAULT_CONFIG = {\r\n  version: \"1.0.0\",\r\n  lastUpdated: new Date().toISOString(),\r\n  settings: {\r\n    theme: 'light',\r\n    backgroundType: 'color',\r\n    backgroundColor: '#ffffff',\r\n    backgroundImage: '',\r\n    backgroundOpacity: 1,\r\n    backgroundBrightness: 1,\r\n    backgroundBlur: 0,\r\n    backgroundFit: 'cover',\r\n    textColor: '#000000',\r\n    linkColor: '#4a90e2',\r\n    fontFamily: 'Arial, sans-serif',\r\n    gradientType: 'linear',\r\n    gradientDirection: 'to right',\r\n    gradientColors: ['#4a90e2', '#9b59b6'],\r\n    gradientStops: [0, 100],\r\n    showBackground: true,\r\n    startupModuleType: 'last',\r\n    startupModule: 'quote'\r\n  },\r\n  data: {\r\n    lastActiveModule: 'quote',\r\n    bookmarks: [],\r\n    todos: [],\r\n    notes: [],\r\n    calendar: {\r\n      events: [],\r\n      countdowns: []\r\n    }\r\n  }\r\n};\r\n\r\nclass SimpleConfigManager {\r\n  constructor() {\r\n    this.config = null;\r\n    this.isInitialized = false;\r\n  }\r\n\r\n  /**\r\n   * 初始化配置管理器\r\n   */\r\n  async initialize() {\r\n    try {\r\n      // 尝试从localStorage加载现有配置\r\n      const savedConfig = this.getFromLocalStorage('homepage-config', null);\r\n      \r\n      if (savedConfig) {\r\n        this.config = this.mergeWithDefaults(savedConfig);\r\n      } else {\r\n        // 迁移旧数据\r\n        await this.migrateFromOldStorage();\r\n      }\r\n      \r\n      this.isInitialized = true;\r\n      console.log('简化配置管理器初始化成功');\r\n    } catch (error) {\r\n      console.error('配置管理器初始化失败:', error);\r\n      this.config = { ...DEFAULT_CONFIG };\r\n      this.isInitialized = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 从旧存储迁移数据\r\n   */\r\n  async migrateFromOldStorage() {\r\n    const migratedConfig = { ...DEFAULT_CONFIG };\r\n    \r\n    // 迁移设置\r\n    const oldSettings = this.getFromLocalStorage('homepage-settings', {});\r\n    if (Object.keys(oldSettings).length > 0) {\r\n      migratedConfig.settings = { ...migratedConfig.settings, ...oldSettings };\r\n    }\r\n\r\n    // 迁移数据\r\n    migratedConfig.data.lastActiveModule = this.getFromLocalStorage('last-active-module', 'quote');\r\n    migratedConfig.data.bookmarks = this.getFromLocalStorage('homepage-bookmarks', []);\r\n    migratedConfig.data.todos = this.getFromLocalStorage('homepage-todos', []);\r\n    migratedConfig.data.notes = this.getFromLocalStorage('homepage-notes', []);\r\n    \r\n    const calendarData = this.getFromLocalStorage('homepage-calendar', {});\r\n    if (calendarData.events) migratedConfig.data.calendar.events = calendarData.events;\r\n    if (calendarData.countdowns) migratedConfig.data.calendar.countdowns = calendarData.countdowns;\r\n\r\n    this.config = migratedConfig;\r\n    await this.saveConfig();\r\n    \r\n    console.log('数据迁移完成');\r\n  }\r\n\r\n  /**\r\n   * 合并配置与默认值\r\n   */\r\n  mergeWithDefaults(config) {\r\n    const merged = JSON.parse(JSON.stringify(DEFAULT_CONFIG));\r\n    \r\n    const deepMerge = (target, source) => {\r\n      for (const key in source) {\r\n        if (source[key] && typeof source[key] === 'object' && !Array.isArray(source[key])) {\r\n          if (!target[key]) target[key] = {};\r\n          deepMerge(target[key], source[key]);\r\n        } else {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    };\r\n\r\n    deepMerge(merged, config);\r\n    merged.lastUpdated = new Date().toISOString();\r\n    \r\n    return merged;\r\n  }\r\n\r\n  /**\r\n   * 保存配置\r\n   */\r\n  async saveConfig() {\r\n    if (!this.config) return;\r\n\r\n    try {\r\n      this.config.lastUpdated = new Date().toISOString();\r\n      \r\n      // 保存到localStorage\r\n      this.saveToLocalStorage('homepage-config', this.config);\r\n      \r\n      console.log('配置保存成功');\r\n    } catch (error) {\r\n      console.error('保存配置失败:', error);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 获取配置值\r\n   */\r\n  get(path, defaultValue = null) {\r\n    if (!this.config) return defaultValue;\r\n    \r\n    const keys = path.split('.');\r\n    let current = this.config;\r\n    \r\n    for (const key of keys) {\r\n      if (current && typeof current === 'object' && key in current) {\r\n        current = current[key];\r\n      } else {\r\n        return defaultValue;\r\n      }\r\n    }\r\n    \r\n    return current;\r\n  }\r\n\r\n  /**\r\n   * 设置配置值\r\n   */\r\n  async set(path, value) {\r\n    if (!this.config) await this.initialize();\r\n    \r\n    const keys = path.split('.');\r\n    let current = this.config;\r\n    \r\n    // 导航到父级对象\r\n    for (let i = 0; i < keys.length - 1; i++) {\r\n      const key = keys[i];\r\n      if (!current[key] || typeof current[key] !== 'object') {\r\n        current[key] = {};\r\n      }\r\n      current = current[key];\r\n    }\r\n    \r\n    // 设置值\r\n    const lastKey = keys[keys.length - 1];\r\n    current[lastKey] = value;\r\n    \r\n    // 保存配置\r\n    await this.saveConfig();\r\n  }\r\n\r\n  /**\r\n   * 导出配置为config.json\r\n   */\r\n  exportConfig() {\r\n    if (!this.config) return null;\r\n    \r\n    const configJson = JSON.stringify(this.config, null, 2);\r\n    const blob = new Blob([configJson], { type: 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    \r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = 'config.json';\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n    \r\n    return configJson;\r\n  }\r\n\r\n  /**\r\n   * 导入配置\r\n   */\r\n  async importConfig(file) {\r\n    try {\r\n      const text = await file.text();\r\n      const importedConfig = JSON.parse(text);\r\n      \r\n      // 验证配置格式\r\n      if (!this.validateConfig(importedConfig)) {\r\n        throw new Error('配置文件格式无效');\r\n      }\r\n      \r\n      this.config = this.mergeWithDefaults(importedConfig);\r\n      await this.saveConfig();\r\n      \r\n      return true;\r\n    } catch (error) {\r\n      console.error('导入配置失败:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * 验证配置格式\r\n   */\r\n  validateConfig(config) {\r\n    return config && \r\n           typeof config === 'object' && \r\n           config.settings && \r\n           config.data;\r\n  }\r\n\r\n  /**\r\n   * 重置配置\r\n   */\r\n  async resetConfig() {\r\n    this.config = { ...DEFAULT_CONFIG };\r\n    await this.saveConfig();\r\n    console.log('配置已重置为默认值');\r\n  }\r\n\r\n  /**\r\n   * 获取配置统计信息\r\n   */\r\n  getStats() {\r\n    if (!this.config) return null;\r\n    \r\n    return {\r\n      version: this.config.version,\r\n      lastUpdated: this.config.lastUpdated,\r\n      dataSize: JSON.stringify(this.config).length,\r\n      bookmarksCount: this.config.data.bookmarks?.length || 0,\r\n      todosCount: this.config.data.todos?.length || 0,\r\n      notesCount: this.config.data.notes?.length || 0,\r\n      eventsCount: this.config.data.calendar?.events?.length || 0,\r\n      countdownsCount: this.config.data.calendar?.countdowns?.length || 0\r\n    };\r\n  }\r\n\r\n  // 辅助方法\r\n  getFromLocalStorage(key, defaultValue) {\r\n    try {\r\n      const item = localStorage.getItem(key);\r\n      return item ? JSON.parse(item) : defaultValue;\r\n    } catch {\r\n      return defaultValue;\r\n    }\r\n  }\r\n\r\n  saveToLocalStorage(key, value) {\r\n    try {\r\n      localStorage.setItem(key, JSON.stringify(value));\r\n    } catch (error) {\r\n      console.error('localStorage保存失败:', error);\r\n    }\r\n  }\r\n}\r\n\r\n// 创建全局实例\r\nconst simpleConfigManager = new SimpleConfigManager();\r\n\r\nexport default simpleConfigManager;\r\nexport { DEFAULT_CONFIG };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}