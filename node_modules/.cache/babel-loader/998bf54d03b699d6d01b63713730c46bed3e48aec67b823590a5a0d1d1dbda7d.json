{"ast":null,"code":"import React,{createContext,useState,useEffect,useContext}from'react';import{getFromStorage,saveToStorage}from'../utils/storage';// 创建上下文\nimport{jsx as _jsx}from\"react/jsx-runtime\";const SettingsContext=/*#__PURE__*/createContext();// 默认设置\nconst defaultSettings={theme:'light',background:{type:'color',value:'#ffffff',opacity:1,brightness:1,blurAmount:0,size:'cover',repeat:'no-repeat',overlayOpacity:0},search:{engine:'bing',removeNonUrl:false},modules:{calendar:{enabled:true,showZhuJiLi:false},bookmark:{enabled:true},todo:{enabled:true,notificationSound:true},note:{enabled:true},quote:{enabled:true,fontSize:16,quotes:['既然胜负未分,则应力挽狂澜']},news:{enabled:true,sources:[]}},zenMode:{clockSize:200,focusTime:25},curtainMode:{fontSize:24,speed:2,direction:'up'}};// 设置提供者组件\nexport const SettingsProvider=_ref=>{let{children}=_ref;// 状态\nconst[settings,setSettings]=useState(null);const[isLoaded,setIsLoaded]=useState(false);// 初始化设置\nuseEffect(()=>{const savedSettings=getFromStorage('homepage-settings',defaultSettings);setSettings(savedSettings);setIsLoaded(true);},[]);// 更新设置\nconst updateSettings=newSettings=>{setSettings(newSettings);saveToStorage('homepage-settings',newSettings);};// 更新特定设置\nconst updateSpecificSettings=(path,value)=>{const pathArray=path.split('.');const newSettings={...settings};let current=newSettings;for(let i=0;i<pathArray.length-1;i++){current=current[pathArray[i]];}current[pathArray[pathArray.length-1]]=value;setSettings(newSettings);saveToStorage('homepage-settings',newSettings);};// 导出设置\nconst exportSettings=()=>{const dataStr=JSON.stringify(settings,null,2);const dataUri='data:application/json;charset=utf-8,'+encodeURIComponent(dataStr);const exportFileDefaultName='homepage-settings.json';const linkElement=document.createElement('a');linkElement.setAttribute('href',dataUri);linkElement.setAttribute('download',exportFileDefaultName);linkElement.click();};// 导入设置\nconst importSettings=jsonString=>{try{const newSettings=JSON.parse(jsonString);setSettings(newSettings);saveToStorage('homepage-settings',newSettings);return true;}catch(error){console.error('导入设置失败:',error);return false;}};// 重置设置\nconst resetSettings=()=>{setSettings(defaultSettings);saveToStorage('homepage-settings',defaultSettings);};return/*#__PURE__*/_jsx(SettingsContext.Provider,{value:{settings,isLoaded,updateSettings,updateSpecificSettings,exportSettings,importSettings,resetSettings},children:children});};// 自定义钩子，用于访问设置上下文\nexport const useSettings=()=>{const context=useContext(SettingsContext);if(!context){throw new Error('useSettings必须在SettingsProvider内部使用');}return context;};","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","getFromStorage","saveToStorage","jsx","_jsx","SettingsContext","defaultSettings","theme","background","type","value","opacity","brightness","blurAmount","size","repeat","overlayOpacity","search","engine","removeNonUrl","modules","calendar","enabled","showZhuJiLi","bookmark","todo","notificationSound","note","quote","fontSize","quotes","news","sources","zenMode","clockSize","focusTime","curtainMode","speed","direction","SettingsProvider","_ref","children","settings","setSettings","isLoaded","setIsLoaded","savedSettings","updateSettings","newSettings","updateSpecificSettings","path","pathArray","split","current","i","length","exportSettings","dataStr","JSON","stringify","dataUri","encodeURIComponent","exportFileDefaultName","linkElement","document","createElement","setAttribute","click","importSettings","jsonString","parse","error","console","resetSettings","Provider","useSettings","context","Error"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/contexts/SettingsContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { getFromStorage, saveToStorage } from '../utils/storage';\r\n\r\n// 创建上下文\r\nconst SettingsContext = createContext();\r\n\r\n// 默认设置\r\nconst defaultSettings = {\r\n  theme: 'light',\r\n  background: {\r\n    type: 'color',\r\n    value: '#ffffff',\r\n    opacity: 1,\r\n    brightness: 1,\r\n    blurAmount: 0,\r\n    size: 'cover',\r\n    repeat: 'no-repeat',\r\n    overlayOpacity: 0\r\n  },\r\n  search: {\r\n    engine: 'bing',\r\n    removeNonUrl: false\r\n  },\r\n  modules: {\r\n    calendar: {\r\n      enabled: true,\r\n      showZhuJiLi: false\r\n    },\r\n    bookmark: {\r\n      enabled: true\r\n    },\r\n    todo: {\r\n      enabled: true,\r\n      notificationSound: true\r\n    },\r\n    note: {\r\n      enabled: true\r\n    },\r\n    quote: {\r\n      enabled: true,\r\n      fontSize: 16,\r\n      quotes: ['既然胜负未分,则应力挽狂澜']\r\n    },\r\n    news: {\r\n      enabled: true,\r\n      sources: []\r\n    }\r\n  },\r\n  zenMode: {\r\n    clockSize: 200,\r\n    focusTime: 25\r\n  },\r\n  curtainMode: {\r\n    fontSize: 24,\r\n    speed: 2,\r\n    direction: 'up'\r\n  }\r\n};\r\n\r\n// 设置提供者组件\r\nexport const SettingsProvider = ({ children }) => {\r\n  // 状态\r\n  const [settings, setSettings] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  \r\n  // 初始化设置\r\n  useEffect(() => {\r\n    const savedSettings = getFromStorage('homepage-settings', defaultSettings);\r\n    setSettings(savedSettings);\r\n    setIsLoaded(true);\r\n  }, []);\r\n  \r\n  // 更新设置\r\n  const updateSettings = (newSettings) => {\r\n    setSettings(newSettings);\r\n    saveToStorage('homepage-settings', newSettings);\r\n  };\r\n  \r\n  // 更新特定设置\r\n  const updateSpecificSettings = (path, value) => {\r\n    const pathArray = path.split('.');\r\n    const newSettings = { ...settings };\r\n    \r\n    let current = newSettings;\r\n    for (let i = 0; i < pathArray.length - 1; i++) {\r\n      current = current[pathArray[i]];\r\n    }\r\n    \r\n    current[pathArray[pathArray.length - 1]] = value;\r\n    \r\n    setSettings(newSettings);\r\n    saveToStorage('homepage-settings', newSettings);\r\n  };\r\n  \r\n  // 导出设置\r\n  const exportSettings = () => {\r\n    const dataStr = JSON.stringify(settings, null, 2);\r\n    const dataUri = 'data:application/json;charset=utf-8,'+ encodeURIComponent(dataStr);\r\n    \r\n    const exportFileDefaultName = 'homepage-settings.json';\r\n    \r\n    const linkElement = document.createElement('a');\r\n    linkElement.setAttribute('href', dataUri);\r\n    linkElement.setAttribute('download', exportFileDefaultName);\r\n    linkElement.click();\r\n  };\r\n  \r\n  // 导入设置\r\n  const importSettings = (jsonString) => {\r\n    try {\r\n      const newSettings = JSON.parse(jsonString);\r\n      setSettings(newSettings);\r\n      saveToStorage('homepage-settings', newSettings);\r\n      return true;\r\n    } catch (error) {\r\n      console.error('导入设置失败:', error);\r\n      return false;\r\n    }\r\n  };\r\n  \r\n  // 重置设置\r\n  const resetSettings = () => {\r\n    setSettings(defaultSettings);\r\n    saveToStorage('homepage-settings', defaultSettings);\r\n  };\r\n  \r\n  return (\r\n    <SettingsContext.Provider \r\n      value={{ \r\n        settings, \r\n        isLoaded, \r\n        updateSettings, \r\n        updateSpecificSettings,\r\n        exportSettings,\r\n        importSettings,\r\n        resetSettings\r\n      }}\r\n    >\r\n      {children}\r\n    </SettingsContext.Provider>\r\n  );\r\n};\r\n\r\n// 自定义钩子，用于访问设置上下文\r\nexport const useSettings = () => {\r\n  const context = useContext(SettingsContext);\r\n  if (!context) {\r\n    throw new Error('useSettings必须在SettingsProvider内部使用');\r\n  }\r\n  return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}