{"ast":null,"code":"import React,{useState,useEffect}from'react';import styled from'styled-components';import{formatDateTime}from'../../utils/dateTime';import{useTheme}from'../../contexts/ThemeContext';import DarkModeIcon from'@mui/icons-material/DarkMode';import LightModeIcon from'@mui/icons-material/LightMode';import SettingsIcon from'@mui/icons-material/Settings';import SelfImprovementIcon from'@mui/icons-material/SelfImprovement';import TheaterComedyIcon from'@mui/icons-material/TheaterComedy';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const HeaderContainer=styled.header`\n  text-align: center;\n  padding: 20px 0;\n  position: relative;\n`;const TimeDisplay=styled.div`\n  font-size: 3.5rem;\n  font-weight: 300;\n  margin-bottom: 5px;\n  color: var(--text-color);\n`;const DateDisplay=styled.div`\n  font-size: 1.2rem;\n  color: var(--text-secondary-color);\n`;const HeaderButtons=styled.div`\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  display: flex;\n  gap: 10px;\n`;const HeaderButton=styled.button`\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: none;\n  cursor: pointer;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\n  transition: all 0.3s ease;\n  \n  &:hover {\n    transform: translateY(-3px);\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\n  }\n  \n  &.theme {\n    background-color: var(--primary-color);\n    color: white;\n  }\n  \n  &.settings {\n    background-color: #6c5ce7;\n    color: white;\n  }\n  \n  &.zen {\n    background-color: #00b894;\n    color: white;\n  }\n  \n  &.curtain {\n    background-color: #e17055;\n    color: white;\n  }\n`;const Header=_ref=>{let{onSettingsClick,onModeChange,currentMode}=_ref;const[currentTime,setCurrentTime]=useState('');const[currentDate,setCurrentDate]=useState('');const{theme,toggleTheme}=useTheme();useEffect(()=>{// 更新时间和日期\nconst updateDateTime=()=>{const now=new Date();setCurrentTime(formatDateTime(now,'HH:mm:ss'));setCurrentDate(formatDateTime(now,'yyyy年MM月dd日 EEEE'));};// 立即更新一次\nupdateDateTime();// 设置定时器，每秒更新一次\nconst timer=setInterval(updateDateTime,1000);// 组件卸载时清除定时器\nreturn()=>clearInterval(timer);},[]);return/*#__PURE__*/_jsxs(HeaderContainer,{children:[/*#__PURE__*/_jsx(TimeDisplay,{children:currentTime}),/*#__PURE__*/_jsx(DateDisplay,{children:currentDate}),/*#__PURE__*/_jsxs(HeaderButtons,{children:[/*#__PURE__*/_jsx(HeaderButton,{className:\"theme\",onClick:toggleTheme,title:theme==='light'?'切换到深色模式':'切换到浅色模式',children:theme==='light'?/*#__PURE__*/_jsx(DarkModeIcon,{}):/*#__PURE__*/_jsx(LightModeIcon,{})}),/*#__PURE__*/_jsx(HeaderButton,{className:\"zen\",onClick:()=>onModeChange&&onModeChange('zen'),title:\"\\u7985\\u6A21\\u5F0F\",children:/*#__PURE__*/_jsx(SelfImprovementIcon,{})}),/*#__PURE__*/_jsx(HeaderButton,{className:\"curtain\",onClick:()=>onModeChange&&onModeChange('curtain'),title:\"\\u5E55\\u6A21\\u5F0F\",children:/*#__PURE__*/_jsx(TheaterComedyIcon,{})}),/*#__PURE__*/_jsx(HeaderButton,{className:\"settings\",onClick:onSettingsClick,title:\"\\u8BBE\\u7F6E\",children:/*#__PURE__*/_jsx(SettingsIcon,{})})]})]});};export default Header;","map":{"version":3,"names":["React","useState","useEffect","styled","formatDateTime","useTheme","DarkModeIcon","LightModeIcon","SettingsIcon","SelfImprovementIcon","TheaterComedyIcon","jsx","_jsx","jsxs","_jsxs","HeaderContainer","header","TimeDisplay","div","DateDisplay","HeaderButtons","HeaderButton","button","Header","_ref","onSettingsClick","onModeChange","currentMode","currentTime","setCurrentTime","currentDate","setCurrentDate","theme","toggleTheme","updateDateTime","now","Date","timer","setInterval","clearInterval","children","className","onClick","title"],"sources":["D:/Jliu Pureey/Documents/Editor/extion/homepage/src/components/Header/Header.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport { formatDateTime } from '../../utils/dateTime';\r\nimport { useTheme } from '../../contexts/ThemeContext';\r\nimport DarkModeIcon from '@mui/icons-material/DarkMode';\r\nimport LightModeIcon from '@mui/icons-material/LightMode';\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport SelfImprovementIcon from '@mui/icons-material/SelfImprovement';\r\nimport TheaterComedyIcon from '@mui/icons-material/TheaterComedy';\r\n\r\nconst HeaderContainer = styled.header`\r\n  text-align: center;\r\n  padding: 20px 0;\r\n  position: relative;\r\n`;\r\n\r\nconst TimeDisplay = styled.div`\r\n  font-size: 3.5rem;\r\n  font-weight: 300;\r\n  margin-bottom: 5px;\r\n  color: var(--text-color);\r\n`;\r\n\r\nconst DateDisplay = styled.div`\r\n  font-size: 1.2rem;\r\n  color: var(--text-secondary-color);\r\n`;\r\n\r\nconst HeaderButtons = styled.div`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n\r\nconst HeaderButton = styled.button`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border: none;\r\n  cursor: pointer;\r\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);\r\n  transition: all 0.3s ease;\r\n  \r\n  &:hover {\r\n    transform: translateY(-3px);\r\n    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  &.theme {\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n  }\r\n  \r\n  &.settings {\r\n    background-color: #6c5ce7;\r\n    color: white;\r\n  }\r\n  \r\n  &.zen {\r\n    background-color: #00b894;\r\n    color: white;\r\n  }\r\n  \r\n  &.curtain {\r\n    background-color: #e17055;\r\n    color: white;\r\n  }\r\n`;\r\n\r\nconst Header = ({ onSettingsClick, onModeChange, currentMode }) => {\r\n  const [currentTime, setCurrentTime] = useState('');\r\n  const [currentDate, setCurrentDate] = useState('');\r\n  const { theme, toggleTheme } = useTheme();\r\n  \r\n  useEffect(() => {\r\n    // 更新时间和日期\r\n    const updateDateTime = () => {\r\n      const now = new Date();\r\n      setCurrentTime(formatDateTime(now, 'HH:mm:ss'));\r\n      setCurrentDate(formatDateTime(now, 'yyyy年MM月dd日 EEEE'));\r\n    };\r\n    \r\n    // 立即更新一次\r\n    updateDateTime();\r\n    \r\n    // 设置定时器，每秒更新一次\r\n    const timer = setInterval(updateDateTime, 1000);\r\n    \r\n    // 组件卸载时清除定时器\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n  \r\n  return (\r\n    <HeaderContainer>\r\n      <TimeDisplay>{currentTime}</TimeDisplay>\r\n      <DateDisplay>{currentDate}</DateDisplay>\r\n      <HeaderButtons>\r\n        <HeaderButton \r\n          className=\"theme\"\r\n          onClick={toggleTheme} \r\n          title={theme === 'light' ? '切换到深色模式' : '切换到浅色模式'}\r\n        >\r\n          {theme === 'light' ? <DarkModeIcon /> : <LightModeIcon />}\r\n        </HeaderButton>\r\n        \r\n        <HeaderButton \r\n          className=\"zen\"\r\n          onClick={() => onModeChange && onModeChange('zen')} \r\n          title=\"禅模式\"\r\n        >\r\n          <SelfImprovementIcon />\r\n        </HeaderButton>\r\n        \r\n        <HeaderButton \r\n          className=\"curtain\"\r\n          onClick={() => onModeChange && onModeChange('curtain')} \r\n          title=\"幕模式\"\r\n        >\r\n          <TheaterComedyIcon />\r\n        </HeaderButton>\r\n        \r\n        <HeaderButton \r\n          className=\"settings\"\r\n          onClick={onSettingsClick} \r\n          title=\"设置\"\r\n        >\r\n          <SettingsIcon />\r\n        </HeaderButton>\r\n      </HeaderButtons>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}